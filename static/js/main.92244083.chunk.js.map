{"version":3,"sources":["actions/todo/types.ts","reducers/todoReducer.ts","actions/todo/actions.ts","selectors/todo-selectors.ts","components/todos/TodoPage/TodoHeader/TodoFilter/TodoFilterComponent.tsx","components/todos/TodoPage/TodoHeader/TodoFilter/TodoFilter.tsx","components/todos/TodoPage/TodoHeader/TodoHeaderComponent.tsx","components/todos/TodoPage/TodoHeader/TodoHeader.tsx","components/todos/TodoPage/TodoHeader/index.js","components/todos/TodoPage/TodoList/TodoList.tsx","components/todos/TodoPage/TodoList/index.ts","components/todos/TodoPage/TodoList/TodoListComponent.tsx","components/todos/TodoPage/TodoForm/TodoFormComponent.tsx","components/todos/TodoPage/TodoForm/index.ts","components/todos/TodoPage/TodoForm/TodoForm.tsx","components/todos/TodoPage/TodoPage.tsx","App.tsx","reducers/index.ts","sagas/index.ts","store/index.ts","i18n.ts","index.tsx"],"names":["TodoActionKeys","TodoStatus","initialState","todos","JSON","parse","localStorage","getItem","filters","Object","values","filter","value","activeFilter","All","searchTerm","updateTodo","todo","type","UPDATE_TODO","payload","changeActiveFilter","newActiveFilter","CHANGE_ACTIVE_FILTER","updateSearchTerm","newSearchTerm","UPDATE_SEARCH_TERM","getActiveFilter","state","getFilters","getActiveTodos","createSelector","status","formatTime","time","moment","format","getActiveTodosByTerm","length","text","toLowerCase","match","RadioButton","styled","Radio","Button","_templateObject","RadioGroup","Group","_templateObject2","mapDispatchToProps","TodoFilter","connect","_ref","_useTranslation","useTranslation","t","filtersMarkup","i18n","map","react","key","returnObjects","size","onChange","e","target","buttonStyle","Option","Select","searchTermChange","newTerm","SEARCH_TERM_CHANGED","TodoHeader","react_default","a","createElement","Fragment","es_select","defaultValue","style","width","val","i18next","changeLanguage","disabled","input","className","prefix","icon","deleteTodo","id","DELETE_TODO","sortTodos","column","SORT_TODOS","TodoList","React","isInProgress","interval","setInterval","timeTillEnd","clearInterval","columns","align","title","dataIndex","sorter","b","render","createdAt","date","Date","toLocaleDateString","tags","tag","es_tag","color","estimatedTime","record","onClick","Paused","Completed","Active","es_form","layout","FormItem_default","label","es_radio","table","rowClassName","dataSource","pagination","InputGroup","Input","TodoFormComponent_templateObject","createTodoValidationSchema","Yup","shape","required","min","TodoForm","addTodo","ADD_TODO","objectSpread","Math","random","now","formik_esm","initialValues","validationSchema","onSubmit","_ref2","resetForm","_ref3","obj","errors","touched","time_picker","placeholder","props","toDate","getTime","defaultOpenValue","name","_ref4","field","validateStatus","undefined","help","assign","arrayHelpers","index","concat","_ref5","padding","suffix","remove","es_button","push","htmlType","keys","TodoPage","TodoPage_TodoHeader","TodoPage_TodoList","TodoPage_TodoForm","useEffect","saveItemsToLocalStorage","window","setItem","stringify","addEventListener","removeEventListener","Content","minHeight","background","todos_TodoPage_TodoPage","Footer","textAlign","rootReducer","combineReducers","arguments","action","toConsumableArray","updatedTodos","sort","todoSearch","watchTodoSearch","rootSaga","regenerator_default","wrap","_context","prev","next","put","stop","_marked","_context2","debounce","_marked2","_context4","all","_marked4","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","use","initReactI18next","init","resources","en","translation","sortBy","addTag","addToDo","selectTime","left","actions","statuses","In Progress","ua","lng","keySeparator","interpolation","escapeValue","ReactDOM","es","src_App","document","getElementById"],"mappings":"uLAIYA,ECiBAC,kHDjBAD,oQCiBAC,+IAWZ,IAAMC,EAA0B,CAC9BC,MAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MAC5DC,QAASC,OAAOC,OAAOT,GAAYU,OAAO,SAAAC,GAAK,MAAqB,kBAAVA,IAC1DC,aAAcZ,EAAWa,IACzBC,WAAY,IC/BDC,EAAa,SAACC,GAAD,MAA4B,CACpDC,KAAMlB,EAAemB,YACrBC,QAASH,IAwBEI,EAAqB,SAACC,GAAD,MAAkC,CAClEJ,KAAMlB,EAAeuB,qBACrBH,QAASE,IAGEE,EAAmB,SAACC,GAAD,MAA4B,CAC1DP,KAAMlB,EAAe0B,mBACrBN,QAASK,8BC/BEE,EAAkB,SAACC,GAAD,OAC7BA,EAAMzB,MAAMU,cAEDgB,EAAa,SAACD,GAAD,OACxBA,EAAMzB,MAAMK,SAKDsB,EAAiBC,YAXN,SAACH,GAAD,OACtBA,EAAMzB,MAAMA,OAYZwB,EACA,SAACxB,EAAgBU,GACf,OAAOV,EACJQ,OACC,SAAAM,GAAI,QACFA,EAAKe,SACDf,EAAKe,SAAWnB,GACfA,IAAiBZ,EAAWa,SAM9BmB,EAAa,SAACC,GACzB,OAAOC,IAAOD,GAAME,OAAO,aAGhBC,EAAuBN,YAClCD,EAvB2B,SAACF,GAAD,OAC3BA,EAAMzB,MAAMY,YAwBZ,SAACZ,EAAgBY,GACf,OAAIA,EAAWuB,OACNnC,EAAMQ,OACX,SAACM,GAAD,OAAiBA,EAAKsB,KAAKC,cAAcC,MAAM1B,EAAWyB,iBAGrDrC,2WC9Bb,IAAMuC,EAAcC,YAAOC,IAAMC,OAAbF,CAAHG,KAKXC,EAAaJ,YAAOC,IAAMI,MAAbL,CAAHM,KCXVC,EAAqB,CACzB7B,sBAQW8B,EAAaC,YALF,SAACxB,GAAD,MAAsB,CAC5Cf,aAAcc,EAAgBC,GAC9BpB,QAASqB,EAAWD,KAG6BsB,EAAzBE,CDU0B,SAAAC,GAAmD,IAAhDxC,EAAgDwC,EAAhDxC,aAAcL,EAAkC6C,EAAlC7C,QAASa,EAAyBgC,EAAzBhC,mBAAyBiC,EACjFC,cAAZC,EAD6FF,EAC7FE,EAEFC,GAH+FH,EAC1FI,KAEWlD,EAAQmD,IAC5B,SAAAhD,GAAM,OACJiD,EAAA,cAAClB,EAAD,CACEmB,IAAKlD,EACLC,MAAOD,GACN6C,EAAE,OAAO,CAACM,eAAe,IAAzB,SAAmD7D,EAAWU,QAIrE,OACEiD,EAAA,cAACb,EAAD,CACEgB,KAAK,QACLnD,MAAOC,EACPmD,SAAU,SAACC,GAAD,OAAO5C,EAAmB4C,EAAEC,OAAOtD,QAC7CuD,YAAY,SACXV,cEhCCW,EAAWC,IAAXD,OCLFlB,EAAqB,CACzB7B,qBACAG,mBACA8C,iBL8B8B,SAACC,GAAD,MAAsB,CACpDrD,KAAMlB,EAAewE,oBACrBpD,QAASmD,KMzCIE,EDiBArB,YALS,SAACxB,GAAD,MAAsB,CAC5Cf,aAAcc,EAAgBC,GAC9BpB,QAASqB,EAAWD,KAGkBsB,EAAzBE,CDJqC,SAAAC,GAE9C,IADJiB,EACIjB,EADJiB,iBAEA,OACEI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,aAAa,KAAKC,MAAO,CAAEC,MAAO,KAAOjB,SAAU,SAAAkB,GAAG,OAAIC,IAAQC,eAAeF,KACvFR,EAAAC,EAAAC,cAACR,EAAD,CAAQxD,MAAM,MAAd,OACA8D,EAAAC,EAAAC,cAACR,EAAD,CAAQxD,MAAM,MAAd,OACA8D,EAAAC,EAAAC,cAACR,EAAD,CAAQxD,MAAM,KAAKyE,UAAQ,GAA3B,OACAX,EAAAC,EAAAC,cAACR,EAAD,CAAQxD,MAAM,KAAKyE,UAAQ,GAA3B,QAEFX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,UAAU,OACVvB,SAAU,SAACC,GAAD,OAAOK,EAAiBL,EAAEC,OAAOtD,QAC3C4E,OAAQd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMvE,KAAK,WACnB6C,KAAK,QACL7C,KAAK,SACPwD,EAAAC,EAAAC,cAACzB,EAAD,+DGNAD,EAAqB,CAAEwC,WPhBH,SAACC,GAAD,MAAiB,CACzCzE,KAAMlB,EAAe4F,YACrBxE,QAASuE,IOc8B3E,aAAY6E,UPX5B,SAACC,GAAD,MAAyC,CAChE5E,KAAMlB,EAAe+F,WACrB3E,QAAS0E,KQfIE,ED0BA5C,YANS,SAACxB,GAAD,MAAmC,CACzDzB,MAAOkC,EAAqBT,KAO5BsB,EAFaE,CEZmC,SAAAC,GAAkD,IAA/ClD,EAA+CkD,EAA/ClD,MAAOuF,EAAwCrC,EAAxCqC,WAAY1E,EAA4BqC,EAA5BrC,WAAY6E,EAAgBxC,EAAhBwC,UAAgBvC,EAE9EC,cAAZC,EAF0FF,EAE1FE,EAF0FF,EAEvFI,KACXuC,YAAgB,WAEd,IAAMC,EAAe,SAACjF,GAAD,OAAiBA,EAAKe,SAAW/B,EAAW,gBAC3DkG,EAAWC,YAAY,kBAAMjG,EAAMQ,OAAOuF,GAAcvC,IAAI,SAAA1C,GAE5DA,EAAKoF,aACPrF,EAAW,CAAE2E,GAAI1E,EAAK0E,GAAIU,YAAapF,EAAKoF,YAAc,IAAO,EAAI,EAAIpF,EAAKoF,YAAc,SAE5F,KAEJ,OAAO,kBAAMC,cAAcH,MAE7B,IAAMI,EAAU,CACd,CACEC,MAAO,SACPC,MAAOjD,EAAE,OAAQ,CAACM,eAAe,IAA1B,KACP4C,UAAW,OACX7C,IAAK,OAEL8C,OAAQ,SAAChC,EAAUiC,GAAX,OAAwBjC,EAAEpC,KAAKD,OAASsE,EAAErE,KAAKD,QACvDuE,OAAQ,SAACtE,GAAD,OACNqB,EAAA,sBAAM2B,UAAU,oBAAoBhD,KAGxC,CACEiE,MAAO,SACPC,MAAOjD,EAAE,OAAQ,CAACM,eAAe,IAA1B,OACP4C,UAAW,SACX7C,IAAK,SACLgD,OAAQ,SAAC7E,GAAD,OACN4B,EAAA,sBAAM2B,UAAU,sBAAsB/B,EAAEvD,EAAW+B,OAGvD,CACEwE,MAAO,SACPC,MAAOjD,EAAE,OAAQ,CAACM,eAAe,IAA1B,UACP4C,UAAW,YACX7C,IAAK,YAEL8C,OAAQ,SAAChC,EAAUiC,GAAX,OAAyBjC,EAAEmC,UAAYF,EAAEE,UAAY,GAAK,GAClED,OAAQ,SAACE,GAAD,OAAgBnD,EAAA,0BAAO,IAAIoD,KAAKD,GAAME,wBAEhD,CACET,MAAO,SACPC,MAAOjD,EAAE,OAAQ,CAACM,eAAe,IAA1B,KACP4C,UAAW,OACX7C,IAAK,OACLgD,OAAQ,SAACK,GAAD,OACNtD,EAAA,0BACGsD,EAAK5E,OAAS,EAAI4E,EAAKvD,IAAI,SAAAwD,GAAG,OAAIvD,EAAA,cAACwD,EAAA,EAAD,CAAKC,MAAM,OAAOxD,IAAKsD,GAAvB,IAA8BA,KAAc,OAIrF,CACEX,MAAO,SACPC,MAAOjD,EAAE,OAAQ,CAACM,eAAe,IAA1B,cACP4C,UAAW,gBACX7C,IAAK,gBACLgD,OAAQ,SAACS,GAAD,OACN1D,EAAA,0BACG0D,EAAgB,EAAIrF,EAAWqF,GAAiB,OAIvD,CACEd,MAAO,SACPC,MAAOjD,EAAE,OAAQ,CAACM,eAAe,IAA1B,KACP4C,UAAW,cACX7C,IAAK,cACLgD,OAAQ,SAACR,GAAD,OACNzC,EAAA,0BACGyC,EAAc,EAAIpE,EAAWoE,GAAe,OAInD,CACEG,MAAO,SACPC,MAAOjD,EAAE,OAAQ,CAACM,eAAe,IAA1B,QACPD,IAAK,UACLgD,OAAQ,SAACU,GACP,OAAO3D,EAAA,sBAAM2B,UAAU,qBACrB3B,EAAA,cAAC6B,EAAA,EAAD,CACEF,UAAU,4CACViC,QAAS,kBAAMxG,EAAW,CAAE2E,GAAI4B,EAAO5B,GAAI3D,OAAQuF,EAAOvF,SAAW/B,EAAW,eAAiBA,EAAWwH,OAASxH,EAAW,kBAChIiB,KAAMqG,EAAOvF,SAAW/B,EAAW,eAAiB,QAAU,gBAChE2D,EAAA,cAAC6B,EAAA,EAAD,CACEF,UAAU,4CACViC,QAAS,kBAAMxG,EAAW,CAAE2E,GAAI4B,EAAO5B,GAAI3D,OAAQuF,EAAOvF,SAAW/B,EAAWyH,UAAYzH,EAAW0H,OAAS1H,EAAWyH,aAC3HxG,KAAMqG,EAAOvF,SAAW/B,EAAWyH,UAAY,eAAiB,iBAClE9D,EAAA,cAAC6B,EAAA,EAAD,CACEF,UAAU,4CACViC,QAAS,kBAAM9B,EAAW6B,EAAO5B,KACjCzE,KAAK,eAMf,OACE0C,EAAA,cAAAA,EAAA,cACAA,EAAA,cAACgE,EAAA,EAAD,CAAMC,OAAO,UACTjE,EAAA,cAACkE,EAAAnD,EAAD,CAAUoD,MAAOvE,EAAE,WACrBI,EAAA,cAACoE,EAAA,EAAMhF,MAAP,CAAae,KAAK,UAAUC,SAAU,SAACC,GAAD,OAAO4B,EAAU5B,EAAEC,OAAOtD,SAC9DgD,EAAA,cAACoE,EAAA,EAAMnF,OAAP,CAAcjC,MAAM,aAAa4C,EAAE,SACnCI,EAAA,cAACoE,EAAA,EAAMnF,OAAP,CAAcjC,MAAM,QAAQ4C,EAAE,SAC9BI,EAAA,cAACoE,EAAA,EAAMnF,OAAP,CAAcjC,MAAM,iBAAiB4C,EAAE,qBAI3CI,EAAA,cAACqE,EAAA,EAAD,CAAOC,aAAc,SAACX,GAAD,OAAmBA,EAAOvF,SAAW/B,EAAWyH,UAAY,wBAA0B,IAAInB,QAASA,EAAS4B,WAAYhI,EAAOiI,YAAY,4OCrHpK,IAAMC,GAAa1F,YAAO2F,IAAMtF,MAAbL,CAAH4F,MAUVC,GAA6BC,YAAaC,MAAM,CACpDnG,KAAMkG,YAAaE,WACnBzB,KAAMuB,SAAUA,YAAaG,IAAI,IACjCtB,cAAemB,YAAaG,IAAI,KCtBnBC,GCOAzF,YACb,iBAAO,IACP,CAAE0F,QZSmB,SAACpI,GAAD,MAA8B,CACnDQ,KAAMlB,EAAe+I,SACrB3H,QAAQX,OAAAuI,EAAA,EAAAvI,CAAA,CACNkF,GAAIsD,KAAKC,SACTpC,UAAW,IAAIE,KAAKA,KAAKmC,OACzBnH,OAAQ/B,EAAW0H,OACnBtB,YAAa3F,EAAO4G,eACjB5G,MYlBQ0C,CFoB0B,SAAAC,GAAiB,IAAdyF,EAAczF,EAAdyF,QAAcxF,EACpCC,cAAZC,EADgDF,EAChDE,EADgDF,EAC7CI,KACX,OACEE,EAAA,cAACwF,GAAA,EAAD,CACEC,cAAe,CAAE9G,KAAM,GAAI2E,KAAM,GAAII,cAAe,GACpDgC,iBAAkBd,GAClBe,SAAU,SAAC7I,EAAD8I,GAA2B,IAAhBC,EAAgBD,EAAhBC,UACnBX,EAAQpI,GACR+I,KAEF5C,OAAQ,SAAA6C,GAAA,IAZGC,EAYAjJ,EAAHgJ,EAAGhJ,OAAQkJ,EAAXF,EAAWE,OAAgBC,GAA3BH,EAAmB1H,OAAnB0H,EAA2BG,SAA3B,OACNjG,EAAA,cAACwF,GAAA,EAAD,CAAM7D,UAAU,QACd3B,EAAA,cAACkG,EAAA,EAAD,CACEvE,UAAU,OACVxB,KAAK,QACLiB,MAAO,CAACC,MAAO,SACf8E,YAAavG,EAAE,cACfQ,SAAU,SAACgG,GACTtJ,EAAO4G,cAAgB0C,EAAMC,SAASC,WAExCC,iBAAkBhI,IAAO,WAAY,cACvCyB,EAAA,cAACwF,GAAA,EAAD,CAAOlI,KAAK,OAAOkJ,KAAK,OAAOvD,OAAQ,SAAAwD,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACrC1G,EAAA,cAACkE,EAAAnD,EAAD,CACE4F,eAAgBV,EAAQtH,MAAQqH,EAAOrH,KAAO,aAAUiI,EACxDC,KAAMZ,EAAQtH,MAAQqH,EAAOrH,MAC7BqB,EAAA,cAAC0B,EAAA,EAAD7E,OAAAiK,OAAA,GACMJ,EADN,CAEE9E,OAAQ5B,EAAA,cAAC6B,EAAA,EAAD,CAAMvE,KAAK,SACnB6C,KAAK,QACL7C,KAAK,cAGX0C,EAAA,cAACwF,GAAA,EAAD,CACEgB,KAAK,OACLvD,OAAQ,SAAA8D,GAAY,OAClB/G,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACyE,GAAD,KAEI3H,EAAOwG,KAAK5E,OAAS,GAClB5B,EAAOwG,KAAKvD,IAAI,SAACwD,EAAKyD,GAAN,OACjBhH,EAAA,cAACwF,GAAA,EAAD,CAAOvF,IAAK+G,EAAOR,KAAI,QAAAS,OAAUD,GAAS/D,OAAQ,SAAAiE,GAAA,IAAGR,EAAHQ,EAAGR,MAAH,OAChD1G,EAAA,cAACkE,EAAAnD,EAAD,CACEK,MAAO,CAAEC,MAAO,MAAO8F,QAAS,QAChCR,eAAgBV,EAAQ3C,MAAQ2C,EAAQ3C,KAAK0D,IAAUhB,EAAO1C,MAAQ0C,EAAO1C,KAAK0D,GAAS,aAAUJ,EACrGC,KAAMZ,EAAQ3C,MAAQ2C,EAAQ3C,KAAK0D,IAAUhB,EAAO1C,MAAQ0C,EAAO1C,KAAK0D,IACxEhH,EAAA,cAAC0B,EAAA,EAAD7E,OAAAiK,OAAA,CAEEM,OAAQpH,EAAA,cAAC6B,EAAA,EAAD,CAAMvE,KAAK,QAAQsG,QAAS,kBAAMmD,EAAaM,OAAOL,OAC1DN,EAHN,CAIEvG,KAAK,QACL7C,KAAK,OACLqE,UAAU,uBAMtB3B,EAAA,cAACsH,GAAA,EAAD,CAAQ3F,UAAU,4BAA4BiC,QAAS,kBAAMmD,EAAaQ,KAAK,MAC5E3H,EAAE,eAKXI,EAAA,cAACsH,GAAA,EAAD,CACElG,MAAO,CAAEC,MAAO,QAChBmG,SAAS,SACT/F,UApEKsE,EAoEaC,EApEGnJ,OAAO4K,KAAK1B,GAAKrH,OAAS,GAqE/CyB,KAAK,SAEFP,EAAE,kBG9EF8H,4LAVX,OACE1H,EAAA,qBAAK2B,UAAU,aACb3B,EAAA,cAAC2H,EAAD,MACA3H,EAAA,cAAC4H,EAAD,MACA5H,EAAA,cAAC6H,GAAD,cANexF,wBCiCR7C,uBAJS,SAACxB,GAAD,MAAsB,CAC5CzB,MAAOyB,EAAMzB,MAAMA,QAGNiD,CA5Bc,SAAAC,GAAe,IAAZlD,EAAYkD,EAAZlD,MAY9B,OAVAuL,oBAAU,WACR,IAAMC,EAA0B,kBAC9BC,OAAOtL,aAAauL,QAAQ,QAASzL,KAAK0L,UAAU3L,KAItD,OAFAyL,OAAOG,iBAAiB,eAAgBJ,GAEjC,WACLC,OAAOI,oBAAoB,eAAgBL,MAI7CjH,EAAAC,EAAAC,cAACiD,GAAA,EAAD,KACEnD,EAAAC,EAAAC,cAACiD,GAAA,EAAOoE,QAAR,CAAgBjH,MAAO,CAAE+F,QAAS,SAAUmB,UAAW,qBAAsBC,WAAY,SACvFzH,EAAAC,EAAAC,cAACwH,GAAD,OAEF1H,EAAAC,EAAAC,cAACiD,GAAA,EAAOwE,OAAR,CAAerH,MAAO,CAAEsH,UAAW,WAAnC,mEC1BOC,GAAcC,2BAAgB,CAACrM,MhBmC7B,WAAyE,IAAxEyB,EAAwE6K,UAAAnK,OAAA,QAAAkI,IAAAiC,UAAA,GAAAA,UAAA,GAArDvM,EAAcwM,EAAuCD,UAAAnK,OAAA,EAAAmK,UAAA,QAAAjC,EACtF,OAAQkC,EAAOxL,MACb,KAAKlB,EAAe+I,SAClB,OAAOtI,OAAAuI,EAAA,EAAAvI,CAAA,GACFmB,EADL,CAEEzB,MAAK,GAAA0K,OAAApK,OAAAkM,EAAA,EAAAlM,CACAmB,EAAMzB,OADN,CAAAM,OAAAuI,EAAA,EAAAvI,CAAA,GAEEiM,EAAOtL,aAGlB,KAAKpB,EAAe4F,YAClB,OAAOnF,OAAAuI,EAAA,EAAAvI,CAAA,GACFmB,EADL,CAEEzB,MAAOyB,EAAMzB,MAAMQ,OAAO,SAAAM,GAAI,OAAIA,EAAK0E,KAAO+G,EAAOtL,YAGzD,KAAKpB,EAAemB,YAClB,IAAMyL,EAAehL,EAAMzB,MAAMwD,IAAI,SAAA1C,GAGnC,OAFIA,EAAK0E,KAAO+G,EAAOtL,QAAQuE,KAC7B1E,EAAIR,OAAAuI,EAAA,EAAAvI,CAAA,GAAQQ,EAASyL,EAAOtL,UACvBH,IAET,OAAOR,OAAAuI,EAAA,EAAAvI,CAAA,GACFmB,EADL,CAEEzB,MAAMM,OAAAkM,EAAA,EAAAlM,CAAKmM,KAGf,KAAK5M,EAAeuB,qBAClB,OAAOd,OAAAuI,EAAA,EAAAvI,CAAA,GACFmB,EADL,CAEEf,aAAc6L,EAAOtL,UAGzB,KAAKpB,EAAe0B,mBAClB,OAAOjB,OAAAuI,EAAA,EAAAvI,CAAA,GACFmB,EADL,CAEEb,WAAY2L,EAAOtL,UAGvB,KAAKpB,EAAe+F,WAClB,OAAOtF,OAAAuI,EAAA,EAAAvI,CAAA,GACFmB,EADL,CAEEzB,MAAOM,OAAAkM,EAAA,EAAAlM,CAAImB,EAAMzB,OAAO0M,KAAK,SAAClI,EAAUiC,GAAX,OAAwBjC,EAAE+H,EAAOtL,SAAWwF,EAAE8F,EAAOtL,SAAW,GAAK,MAGtG,QACE,OAAOQ,2DiBhFIkL,iBAMAC,iBAYQC,IAlBlB,SAAUF,GAAWJ,GAArB,OAAAO,GAAAtI,EAAAuI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEL,OAFKF,EAAAE,KAAA,EAECC,aAAI9L,EAAiBkL,EAAOtL,UAF7B,wBAAA+L,EAAAI,SAAAC,IAMA,SAAUT,KAAV,OAAAE,GAAAtI,EAAAuI,KAAA,SAAAO,GAAA,cAAAA,EAAAL,KAAAK,EAAAJ,MAAA,OACL,OADKI,EAAAJ,KAAA,EACCK,aAAS,IAAK1N,EAAewE,oBAAqBsI,IADnD,wBAAAW,EAAAF,SAAAI,IAYQ,SAAUX,KAAV,OAAAC,GAAAtI,EAAAuI,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OACb,OADaO,EAAAP,KAAA,EACPQ,aAAI,CACRd,OAFW,wBAAAa,EAAAL,SAAAO,ICVf,IAAMC,GAAiBC,eACVC,GAAQC,uBACnB3B,GACA4B,+BACEC,2BAAgBL,MAGpBA,GAAeM,IAAIrB,IC0CnBtJ,IACG4K,IAAIC,KACJC,KAAK,CACJC,UA5Dc,CAChBC,GAAI,CACFC,YAAa,CACXC,OAAQ,UACR7H,KAAM,OACNxE,KAAM,OACN+E,cAAe,iBACfuH,OAAQ,UACRC,QAAS,WACTC,WAAY,aACZ9N,KAAM,CACJsB,KAAM,OACNP,OAAQ,SACR8E,UAAW,aACXI,KAAM,OACNI,cAAe,iBACf0H,KAAM,OACNC,QAAS,UACTC,SAAU,CACRpO,IAAO,MACP6G,OAAU,SACVD,UAAa,YACbyH,cAAe,cACf1H,OAAU,eAKlB2H,GAAI,CACFT,YAAa,CACXC,OAAQ,sEACR7H,KAAM,2BACNxE,KAAM,uCACN+E,cAAe,0GACfuH,OAAQ,0DACRC,QAAS,wFACTC,WAAY,sEACZ9N,KAAM,CACJsB,KAAM,iCACNP,OAAQ,uCACR8E,UAAW,0DACXI,KAAM,2BACNI,cAAe,qEACf0H,KAAM,+DACNC,QAAS,qBACTC,SAAU,CACRpO,IAAO,qBACP6G,OAAU,6CACVD,UAAa,yDACbyH,cAAe,0DACf1H,OAAU,mDAWhB4H,IAAK,KAELC,cAAc,EAEdC,cAAe,CACbC,aAAa,KAIF9L,EAAf,ECpEF+L,IAAS5I,OACTnC,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAUzB,MAAOA,IACfvJ,EAAAC,EAAAC,cAAC+K,GAAD,OACWC,SAASC,eAAe","file":"static/js/main.92244083.chunk.js","sourcesContent":["import { UpdateTodoModel } from './../../dto/update-todo.model';\r\nimport { CreateTodoModel } from './../../dto/create-todo.model';\r\nimport { TodoStatus, ITodo, ISortableTodoColumns } from './../../reducers/todoReducer';\r\n\r\nexport enum TodoActionKeys {\r\n  ADD_TODO = 'ADD_TODO',\r\n  UPDATE_TODO = 'UPDATE_TODO',\r\n  DELETE_TODO = 'DELETE_TODO',\r\n  CHANGE_ACTIVE_FILTER = 'CHANGE_ACTIVE_FILTER',\r\n  UPDATE_SEARCH_TERM = 'UPDATE_SEARCH_TERM',\r\n  SEARCH_TERM_CHANGED = 'SEARCH_TERM_CHANGED',\r\n  SORT_TODOS = 'SORT_TODOS'\r\n\r\n}\r\n\r\nexport interface AddTodoAction {\r\n  readonly type: TodoActionKeys.ADD_TODO;\r\n  readonly payload: ITodo;\r\n}\r\n\r\nexport interface DeleteTodoAction {\r\n  readonly type: TodoActionKeys.DELETE_TODO;\r\n  readonly payload: number;\r\n}\r\n\r\nexport interface UpdateTodoAction {\r\n  readonly type: TodoActionKeys.UPDATE_TODO;\r\n  readonly payload: UpdateTodoModel;\r\n}\r\n\r\nexport interface ChangeActiveFilterAction {\r\n  readonly type: TodoActionKeys.CHANGE_ACTIVE_FILTER;\r\n  readonly payload: TodoStatus;\r\n}\r\n\r\nexport interface UpdateSearchTermAction {\r\n  readonly type: TodoActionKeys.UPDATE_SEARCH_TERM;\r\n  readonly payload: string;\r\n}\r\n\r\nexport interface SortTodosAction {\r\n  readonly type: TodoActionKeys.SORT_TODOS;\r\n  readonly payload: keyof ISortableTodoColumns;\r\n}\r\n\r\n\r\n\r\nexport type TodoActionTypes = AddTodoAction\r\n  | DeleteTodoAction\r\n  | UpdateTodoAction\r\n  | ChangeActiveFilterAction\r\n  | UpdateSearchTermAction\r\n  | SortTodosAction;","import todos from './../__data/Todos';\r\nimport {\r\n  TodoActionKeys,\r\n  TodoActionTypes\r\n} from './../actions/todo/types';\r\n\r\nexport interface ISortableTodoColumns {\r\n  text: string;\r\n  createdAt: Date;\r\n  estimatedTime?: number;\r\n}\r\nexport interface ITodo {\r\n  id: number;\r\n  text: string;\r\n  status?: TodoStatus;\r\n  createdAt: Date;\r\n  tags?: string[];\r\n  estimatedTime: number;\r\n  timeTillEnd?: number;\r\n}\r\n\r\nexport enum TodoStatus {\r\n  All, Active, Completed, 'In Progress', Paused\r\n};\r\n\r\nexport interface TodoState {\r\n  todos: ITodo[];\r\n  filters: TodoStatus[];\r\n  activeFilter: TodoStatus;\r\n  searchTerm: string;\r\n}\r\n\r\nconst initialState: TodoState = {\r\n  todos: <ITodo[]>JSON.parse(localStorage.getItem('todos') || '[]'),\r\n  filters: Object.values(TodoStatus).filter(value => typeof value === 'number'),\r\n  activeFilter: TodoStatus.All,\r\n  searchTerm: ''\r\n};\r\n\r\nexport default (state: TodoState = initialState, action: TodoActionTypes): TodoState => {\r\n  switch (action.type) {\r\n    case TodoActionKeys.ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos,\r\n          { ...action.payload }\r\n        ]\r\n      }\r\n    case TodoActionKeys.DELETE_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo.id !== action.payload)\r\n      };\r\n    }\r\n    case TodoActionKeys.UPDATE_TODO: {\r\n      const updatedTodos = state.todos.map(todo => {\r\n        if (todo.id === action.payload.id)\r\n          todo = { ...todo, ...action.payload };\r\n        return todo;\r\n      })\r\n      return {\r\n        ...state,\r\n        todos: [...updatedTodos]\r\n      };\r\n    }\r\n    case TodoActionKeys.CHANGE_ACTIVE_FILTER: {\r\n      return {\r\n        ...state,\r\n        activeFilter: action.payload\r\n      };\r\n    }\r\n    case TodoActionKeys.UPDATE_SEARCH_TERM: {\r\n      return {\r\n        ...state,\r\n        searchTerm: action.payload\r\n      }\r\n    }\r\n    case TodoActionKeys.SORT_TODOS: {\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos].sort((a: ITodo, b: ITodo) => a[action.payload] > b[action.payload] ? 1 : -1)\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import { CreateTodoModel } from './../../dto/create-todo.model';\r\nimport { TodoStatus, ITodo, ISortableTodoColumns } from './../../reducers/todoReducer';\r\nimport { TodoActionKeys } from './types';\r\nimport { UpdateTodoModel } from '../../dto/update-todo.model';\r\n\r\nexport const updateTodo = (todo: UpdateTodoModel) => ({\r\n  type: TodoActionKeys.UPDATE_TODO,\r\n  payload: todo\r\n});\r\n\r\nexport const deleteTodo = (id: number) => ({\r\n  type: TodoActionKeys.DELETE_TODO,\r\n  payload: id\r\n});\r\n\r\nexport const sortTodos = (column: keyof ISortableTodoColumns) => ({\r\n  type: TodoActionKeys.SORT_TODOS,\r\n  payload: column\r\n});\r\n\r\nexport const addTodo = (values: CreateTodoModel) => ({\r\n  type: TodoActionKeys.ADD_TODO,\r\n  payload: {\r\n    id: Math.random(),\r\n    createdAt: new Date(Date.now()),\r\n    status: TodoStatus.Active,\r\n    timeTillEnd: values.estimatedTime,\r\n    ...values,\r\n  }\r\n});\r\n\r\nexport const changeActiveFilter = (newActiveFilter: TodoStatus) => ({\r\n  type: TodoActionKeys.CHANGE_ACTIVE_FILTER,\r\n  payload: newActiveFilter\r\n});\r\n\r\nexport const updateSearchTerm = (newSearchTerm: string) => ({\r\n  type: TodoActionKeys.UPDATE_SEARCH_TERM,\r\n  payload: newSearchTerm\r\n});\r\n\r\nexport const searchTermChange = (newTerm: string) => ({\r\n  type: TodoActionKeys.SEARCH_TERM_CHANGED,\r\n  payload: newTerm\r\n});\r\n\r\n","import { AppState } from './../store/index';\r\nimport { createSelector } from 'reselect';\r\nimport { ITodo, TodoStatus } from '../reducers/todoReducer';\r\nimport moment from 'moment';\r\n\r\nexport const getTodos = (state: AppState) =>\r\n  state.todos.todos;\r\nexport const getActiveFilter = (state: AppState) =>\r\n  state.todos.activeFilter;\r\n\r\nexport const getFilters = (state: AppState) =>\r\n  state.todos.filters;\r\n\r\nexport const getSearchTerm = (state: AppState) =>\r\n  state.todos.searchTerm;\r\n\r\nexport const getActiveTodos = createSelector(\r\n  getTodos,\r\n  getActiveFilter,\r\n  (todos: ITodo[], activeFilter: TodoStatus) => {\r\n    return todos\r\n      .filter(\r\n        todo =>\r\n          todo.status\r\n            ? todo.status === activeFilter\r\n            || activeFilter === TodoStatus.All\r\n            : false\r\n      );\r\n  }\r\n);\r\n\r\nexport const formatTime = (time: number) => {\r\n  return moment(time).format('HH:mm:ss');\r\n}\r\n\r\nexport const getActiveTodosByTerm = createSelector(\r\n  getActiveTodos,\r\n  getSearchTerm,\r\n  (todos: ITodo[], searchTerm: string) => {\r\n    if (searchTerm.length)\r\n      return todos.filter(\r\n        (todo: ITodo) => todo.text.toLowerCase().match(searchTerm.toLowerCase())\r\n      )\r\n    else\r\n      return todos;\r\n  }\r\n);","import * as React from 'react';\r\nimport { TodoStatus } from '../../../../../reducers/todoReducer';\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { Radio } from 'antd';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface Props {\r\n  activeFilter: TodoStatus;\r\n  filters: TodoStatus[];\r\n  changeActiveFilter(filter: TodoStatus): void;\r\n}\r\n\r\nconst RadioButton = styled(Radio.Button)`\r\n  flex: 1;\r\n  text-align: center;\r\n`;\r\n\r\nconst RadioGroup = styled(Radio.Group)`\r\n  display: flex !important;\r\n  width: 100%;\r\n  @media screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const TodoFilterComponent: React.FC<Props> = ({ activeFilter, filters, changeActiveFilter }) => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const filtersMarkup = filters.map(\r\n    filter => (\r\n      <RadioButton\r\n        key={filter}\r\n        value={filter}>\r\n        {t('todo',{returnObjects: true})['statuses' as any][TodoStatus[filter] as any]}\r\n      </RadioButton>\r\n    )\r\n  );\r\n  return (\r\n    <RadioGroup\r\n      size='large'\r\n      value={activeFilter}\r\n      onChange={(e) => changeActiveFilter(e.target.value)}\r\n      buttonStyle=\"solid\">\r\n      {filtersMarkup}\r\n    </RadioGroup>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { AppState } from './../../../../../store';\r\nimport { changeActiveFilter } from './../../../../../actions/todo/actions';\r\n\r\nimport { getActiveFilter, getFilters } from './../../../../../selectors/todo-selectors';\r\nimport { TodoFilterComponent } from './TodoFilterComponent';\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  changeActiveFilter\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  activeFilter: getActiveFilter(state),\r\n  filters: getFilters(state),\r\n});\r\n\r\nexport const TodoFilter = connect(mapStateToProps, mapDispatchToProps)(TodoFilterComponent);","import React from 'react';\r\nimport { Input, Icon, Select } from 'antd';\r\n\r\nimport { TodoStatus } from '../../../../reducers/todoReducer';\r\nimport { TodoFilter } from './TodoFilter/TodoFilter';\r\nimport i18next from 'i18next';\r\n\r\ninterface Props {\r\n  activeFilter: TodoStatus;\r\n  filters: TodoStatus[];\r\n  changeActiveFilter(filter: TodoStatus): void;\r\n  searchTermChange(newTerm: string): void;\r\n}\r\nconst { Option } = Select;\r\n\r\nexport const TodoHeaderComponent: React.FC<Props> = ({\r\n  searchTermChange\r\n}) => {\r\n  return (\r\n    <>\r\n      <Select defaultValue=\"ua\" style={{ width: 120 }} onChange={val => i18next.changeLanguage(val)}>\r\n        <Option value=\"ua\">Ukr</Option>\r\n        <Option value=\"en\">Eng</Option>\r\n        <Option value=\"de\" disabled>Deu</Option>\r\n        <Option value=\"ru\" disabled>Rus</Option>\r\n      </Select>\r\n      <Input\r\n        className='my-3'\r\n        onChange={(e) => searchTermChange(e.target.value)}\r\n        prefix={<Icon type=\"search\" />}\r\n        size='large'\r\n        type=\"text\" />\r\n      <TodoFilter />\r\n    </>\r\n  );\r\n}","import { connect } from 'react-redux';\r\n\r\nimport { AppState } from '../.././../../store';\r\nimport { changeActiveFilter, updateSearchTerm, searchTermChange } from './../../../../actions/todo/actions';\r\nimport { getActiveFilter, getFilters } from './../../../../selectors/todo-selectors';\r\n\r\nimport { TodoHeaderComponent } from './TodoHeaderComponent';\r\n\r\nconst mapDispatchToProps = {\r\n  changeActiveFilter,\r\n  updateSearchTerm,\r\n  searchTermChange\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  activeFilter: getActiveFilter(state),\r\n  filters: getFilters(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHeaderComponent);","import TodoHeader from \"./TodoHeader\";\r\n\r\nexport default TodoHeader;","import { connect } from 'react-redux';\r\n\r\nimport { AppState } from './../../../../store';\r\n\r\nimport { deleteTodo, updateTodo, sortTodos } from '../../../../actions/todo/actions';\r\n\r\nimport { getActiveTodosByTerm } from '../../../../selectors/todo-selectors';\r\n\r\nimport { ITodo, ISortableTodoColumns } from '../../../../reducers/todoReducer';\r\n\r\nimport { TodoListComponent } from './TodoListComponent';\r\nimport { UpdateTodoModel } from '../../../../dto/update-todo.model';\r\n\r\nexport interface IStateProps { \r\n  todos: ITodo[];\r\n};\r\nexport interface IDispatchProps {\r\n  deleteTodo(id: number): void;\r\n  updateTodo(updateTodoModel: UpdateTodoModel): void;\r\n  sortTodos(column: keyof ISortableTodoColumns): void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IStateProps => ({\r\n  todos: getActiveTodosByTerm(state)\r\n});\r\n\r\nconst mapDispatchToProps = { deleteTodo, updateTodo, sortTodos }\r\n\r\nexport default connect<IStateProps, IDispatchProps, null, AppState>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoListComponent);","import TodoList from \"./TodoList\";\r\n\r\nexport default TodoList;","import * as React from 'react';\r\n\r\nimport { ITodo, TodoStatus } from './../../../../reducers/todoReducer';\r\n\r\nimport { Table, Icon, Tag, Form, Radio } from 'antd';\r\n\r\nimport { IStateProps, IDispatchProps } from './TodoList';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport './TodoItem/TodoItem.scss';\r\nimport { formatTime } from '../../../../selectors/todo-selectors';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport {ColumnProps} from 'antd/lib/table';\r\ntype Props = IStateProps & IDispatchProps;\r\n\r\nexport const TodoListComponent: React.FC<Props> = ({ todos, deleteTodo, updateTodo, sortTodos }) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  React.useEffect(() => {\r\n\r\n    const isInProgress = (todo: ITodo) => todo.status === TodoStatus['In Progress'];\r\n    const interval = setInterval(() => todos.filter(isInProgress).map(todo => {\r\n\r\n      if (todo.timeTillEnd) {\r\n        updateTodo({ id: todo.id, timeTillEnd: todo.timeTillEnd - 1000 < 0 ? 0 : todo.timeTillEnd - 1000 })\r\n      }\r\n    }), 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  });\r\n  const columns = [\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['text' as any],\r\n      dataIndex: 'text',\r\n      key: 'text',\r\n      // defaultSortOrder: 'descend',\r\n      sorter: (a: ITodo, b: ITodo) => a.text.length - b.text.length,\r\n      render: (text: string) => (\r\n        <span className='todo__item__text'>{text}</span>\r\n      )\r\n    },\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['status' as any],\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (status: number) => (\r\n        <span className='todo__item__status'>{t(TodoStatus[status])}</span>\r\n      )\r\n    },\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['createdAt' as any],\r\n      dataIndex: 'createdAt',\r\n      key: 'createdAt',\r\n      // defaultSortOrder: 'descend',\r\n      sorter: (a: ITodo, b: ITodo) =>  a.createdAt > b.createdAt ? 1 : -1,\r\n      render: (date: Date) => <span>{new Date(date).toLocaleDateString()}</span>\r\n    },\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['tags' as any],\r\n      dataIndex: \"tags\",\r\n      key: 'tags',\r\n      render: (tags: string[]) => (\r\n        <span>\r\n          {tags.length > 0 ? tags.map(tag => <Tag color=\"blue\" key={tag}>#{tag}</Tag>) : '-'}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['estimatedTime' as any],\r\n      dataIndex: \"estimatedTime\",\r\n      key: 'estimatedTime',\r\n      render: (estimatedTime: number) => (\r\n        <span>\r\n          {estimatedTime > 0 ? formatTime(estimatedTime) : '-'}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['left' as any],\r\n      dataIndex: \"timeTillEnd\",\r\n      key: 'timeTillEnd',\r\n      render: (timeTillEnd: number) => (\r\n        <span>\r\n          {timeTillEnd > 0 ? formatTime(timeTillEnd) : '-'}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['actions' as any],\r\n      key: 'actions',\r\n      render: (record: ITodo) => {\r\n        return <span className='todo__item__icons'>\r\n          <Icon\r\n            className=\"todo__item__icon todo__item__icon--toggle\"\r\n            onClick={() => updateTodo({ id: record.id, status: record.status === TodoStatus[\"In Progress\"] ? TodoStatus.Paused : TodoStatus[\"In Progress\"] })}\r\n            type={record.status === TodoStatus[\"In Progress\"] ? \"pause\" : 'caret-right'} />\r\n          <Icon\r\n            className=\"todo__item__icon todo__item__icon--toggle\"\r\n            onClick={() => updateTodo({ id: record.id, status: record.status === TodoStatus.Completed ? TodoStatus.Active : TodoStatus.Completed })}\r\n            type={record.status === TodoStatus.Completed ? \"close-circle\" : 'check-circle'} />\r\n          <Icon\r\n            className=\"todo__item__icon todo__item__icon--delete\"\r\n            onClick={() => deleteTodo(record.id)}\r\n            type=\"delete\" />\r\n        </span>\r\n      }\r\n    }\r\n  ];\r\n  \r\n  return (\r\n    <>\r\n    <Form layout=\"inline\">\r\n        <FormItem label={t('sortBy')}>\r\n      <Radio.Group size=\"default\" onChange={(e) => sortTodos(e.target.value)}>\r\n        <Radio.Button value=\"createdAt\">{t('date')}</Radio.Button>\r\n        <Radio.Button value=\"text\">{t('text')}</Radio.Button>\r\n        <Radio.Button value=\"estimatedTime\">{t('estimatedTime')}</Radio.Button>\r\n      </Radio.Group>\r\n    </FormItem>\r\n  </Form>\r\n    <Table rowClassName={(record: ITodo) => record.status === TodoStatus.Completed ? 'todo__item--completed' : ''} columns={columns} dataSource={todos} pagination={false} />\r\n    </>\r\n  )\r\n};","import * as React from 'react';\r\nimport { Input, Button, Icon, Tag, InputNumber, TimePicker } from 'antd';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Formik, Form, Field, FieldProps, FieldArray } from 'formik';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport { CreateTodoModel } from '../../../../dto/create-todo.model';\r\nimport styled from \"styled-components\";\r\nimport moment from 'moment';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst InputGroup = styled(Input.Group)`\r\n  display: flex !important;\r\n  margin: 0 -10px !important;\r\n  flex-wrap: wrap;\r\n  width: calc(100% + 20px) !important;\r\n`;\r\ninterface Props {\r\n  addTodo(values: CreateTodoModel): void;\r\n}\r\n\r\nconst createTodoValidationSchema = Yup.object().shape({\r\n  text: Yup.string().required(),\r\n  tags: Yup.array(Yup.string().min(3)),\r\n  estimatedTime: Yup.number().min(0)\r\n});\r\n\r\nconst hasKeys = (obj: object) => Object.keys(obj).length > 0;\r\n\r\nexport const TodoForm: React.FC<Props> = ({ addTodo }) => {\r\n  const { t, i18n } = useTranslation();\r\n  return (\r\n    <Formik\r\n      initialValues={{ text: '', tags: [], estimatedTime: 0 }}\r\n      validationSchema={createTodoValidationSchema}\r\n      onSubmit={(values, { resetForm }) => {\r\n        addTodo(values);\r\n        resetForm();\r\n      }}\r\n      render={({ values, errors, status, touched }) => (\r\n        <Form className='my-3'>\r\n          <TimePicker\r\n            className='my-2'\r\n            size='large'\r\n            style={{width: '150px'}}\r\n            placeholder={t('selectTime')}\r\n            onChange={(props) => {\r\n              values.estimatedTime = props.toDate().getTime();\r\n            }}\r\n            defaultOpenValue={moment('00:00:00', 'HH:mm:ss')}/>\r\n          <Field type=\"text\" name=\"text\" render={({ field }: FieldProps) => (\r\n            <FormItem\r\n              validateStatus={touched.text && errors.text ? 'error' : undefined}\r\n              help={touched.text && errors.text}>\r\n              <Input\r\n                {...field}\r\n                prefix={<Icon type=\"plus\" />}\r\n                size='large'\r\n                type=\"text\" />\r\n            </FormItem>\r\n          )} />\r\n          <FieldArray\r\n            name='tags'\r\n            render={arrayHelpers => (\r\n              <>\r\n                <InputGroup>\r\n                  {\r\n                    values.tags.length > 0\r\n                    && values.tags.map((tag, index) => (\r\n                      <Field key={index} name={`tags.${index}`} render={({ field }: FieldProps) => (\r\n                        <FormItem\r\n                          style={{ width: '20%', padding: '10px' }}\r\n                          validateStatus={touched.tags && touched.tags[index] && errors.tags && errors.tags[index] ? 'error' : undefined}\r\n                          help={touched.tags && touched.tags[index] && errors.tags && errors.tags[index]}>\r\n                          <Input\r\n\r\n                            suffix={<Icon type=\"minus\" onClick={() => arrayHelpers.remove(index)} />}\r\n                            {...field}\r\n                            size='large'\r\n                            type=\"text\"\r\n                            className=\"todo-input\" />\r\n                        </FormItem>\r\n                      )} />\r\n                    ))\r\n                  }\r\n                </InputGroup>\r\n                <Button className='todo__item__button--small' onClick={() => arrayHelpers.push('')}>\r\n                  {t('addTag')}\r\n                </Button>\r\n              </>\r\n            )}\r\n          />\r\n          <Button\r\n            style={{ width: '100%' }}\r\n            htmlType='submit'\r\n            disabled={hasKeys(errors)}\r\n            size='large'\r\n            >\r\n              {t('addToDo')}\r\n            </Button>\r\n        </Form>\r\n      )}\r\n    >\r\n    </Formik>\r\n  )\r\n};","import TodoForm from './TodoForm';\r\n\r\nexport default TodoForm;","import { connect } from 'react-redux';\r\nimport { TodoForm } from './TodoFormComponent';\r\nimport { addTodo } from '../../../../actions/todo/actions';\r\nimport { CreateTodoModel } from '../../../../dto/create-todo.model';\r\n\r\ninterface DispatchFromProps {\r\n  addTodo(values: CreateTodoModel): void;\r\n}\r\n\r\nexport default connect<{}, DispatchFromProps>(\r\n  () => ({}),\r\n  { addTodo }\r\n)(TodoForm);\r\n\r\n\r\n","import * as React from 'react';\r\n\r\nimport TodoHeader from './TodoHeader';\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\n\r\nimport './TodoPage.scss';\r\n\r\nclass TodoPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"todo-page\">\r\n        <TodoHeader />\r\n        <TodoList />\r\n        <TodoForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoPage;","import React, { Component, useEffect } from 'react';\nimport TodoPage from './components/todos/TodoPage/TodoPage';\nimport { Layout } from 'antd';\n\nimport 'antd/dist/antd.css';\nimport { connect } from 'react-redux';\nimport { AppState } from './store';\nimport { ITodo } from './reducers/todoReducer';\n\ninterface Props {\n  todos: ITodo[]\n};\n\nconst App: React.FC<Props> = ({ todos }) => {\n\n  useEffect(() => {\n    const saveItemsToLocalStorage = () =>\n      window.localStorage.setItem('todos', JSON.stringify(todos))\n\n    window.addEventListener('beforeunload', saveItemsToLocalStorage);\n\n    return function () {\n      window.removeEventListener('beforeunload', saveItemsToLocalStorage);\n    }\n  })\n  return (\n    <Layout>\n      <Layout.Content style={{ padding: '50px 0', minHeight: 'calc(100vh - 69px)', background: '#fff' }}>\n        <TodoPage />\n      </Layout.Content>\n      <Layout.Footer style={{ textAlign: 'center' }}>\n        ToDo App ©2019 Created by Max Chykalo\n      </Layout.Footer>\n    </Layout>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  todos: state.todos.todos\n});\n\nexport default connect(mapStateToProps)(App);\n","import todoReducer, { TodoState } from \"./todoReducer\";\r\nimport { combineReducers, Reducer } from \"redux\";\r\n\r\n// TODO: \"as any\" is used to remove errors caused by redux.\r\nexport const rootReducer = combineReducers({todos : todoReducer} as any);\r\n\r\n","import { call, takeEvery, put, all, debounce } from 'redux-saga/effects';\r\n\r\nimport { TodoActionKeys, UpdateSearchTermAction, UpdateTodoAction } from './../actions/todo/types';\r\nimport { updateSearchTerm, updateTodo } from '../actions/todo/actions';\r\n\r\nexport function* todoSearch(action: UpdateSearchTermAction) {\r\n\r\n  yield put(updateSearchTerm(action.payload));\r\n  // debugger;\r\n}\r\n\r\nexport function* watchTodoSearch(): IterableIterator<any> {\r\n  yield debounce(500, TodoActionKeys.SEARCH_TERM_CHANGED, todoSearch);\r\n}\r\n\r\nexport function* todoInProgress(action: UpdateTodoAction) {\r\n  yield put(updateTodo(action.payload));\r\n}\r\n\r\n// export function* watchTodoInProgress() {\r\n  // yield debounce(500, )\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchTodoSearch()\r\n  ])\r\n}","import { TodoState } from './../reducers/todoReducer';\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { rootReducer } from '../reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootSaga from '../sagas';\r\n\r\nexport interface AppState {\r\n  todos: TodoState\r\n};\r\n// ...\r\n// import { rootSaga } from './sagas'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  )\r\n)\r\nsagaMiddleware.run(rootSaga)\r\n\r\nconst action = (type: string) => store.dispatch({type})","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\n// the translations\r\n// (tip move them in a JSON file and import them)\r\nconst resources = {\r\n  en: {\r\n    translation: {\r\n      sortBy: 'Sort By',\r\n      date: 'Date',\r\n      text: 'Text',\r\n      estimatedTime: 'Estimated Time',\r\n      addTag: 'Add Tag',\r\n      addToDo: 'Add ToDo',\r\n      selectTime: 'Chose Time',\r\n      todo: {\r\n        text: \"Text\",\r\n        status: \"Status\",\r\n        createdAt: \"Created At\",\r\n        tags: \"Tags\",\r\n        estimatedTime: \"Estimated Time\",\r\n        left: \"Left\",\r\n        actions: \"Actions\",\r\n        statuses: {\r\n          \"All\": \"All\",\r\n          \"Active\": \"Active\",\r\n          \"Completed\": \"Completed\",\r\n          \"In Progress\": \"In Progress\",\r\n          \"Paused\": \"In Pause\",    \r\n        } \r\n      },\r\n    }\r\n  },\r\n  ua: {\r\n    translation: {\r\n      sortBy: 'Сортувати по',\r\n      date: 'Даті',\r\n      text: 'Тексту',\r\n      estimatedTime: 'Запланованому часу',\r\n      addTag: 'Додати тег',\r\n      addToDo: 'Додати завдання',\r\n      selectTime: 'Виберіть час',\r\n      todo: {\r\n        text: \"Текст\",\r\n        status: \"Статус\",\r\n        createdAt: \"Створено в\",\r\n        tags: \"Теги\",\r\n        estimatedTime: \"Заплановано\",\r\n        left: \"Залишилось\",\r\n        actions: \"Дії\",\r\n        statuses: {\r\n          \"All\": \"Всі\",\r\n          \"Active\": \"Активні\",\r\n          \"Completed\": \"Завершені\",\r\n          \"In Progress\": \"В прогресі\",\r\n          \"Paused\": \"На паузі\",    \r\n        } \r\n      },\r\n    }\r\n  }\r\n};\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: \"ua\",\r\n\r\n    keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  });\r\n\r\n  export default i18n;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n  <App />\r\n</Provider>, document.getElementById('root'));"],"sourceRoot":""}