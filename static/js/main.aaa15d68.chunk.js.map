{"version":3,"sources":["actions/todo/types.ts","models/todo/TodoStatus.ts","actions/todo/actions.ts","selectors/todo-selectors.ts","components/todos/TodoPage/TodoHeader/TodoFilter/TodoFilterComponent.tsx","components/todos/TodoPage/TodoHeader/TodoFilter/TodoFilter.tsx","components/todos/TodoPage/TodoHeader/TodoHeaderComponent.tsx","components/todos/TodoPage/TodoHeader/TodoHeader.tsx","components/todos/TodoPage/TodoHeader/index.js","components/todos/TodoPage/TodoList/TodoList.tsx","components/todos/TodoPage/TodoList/index.ts","components/todos/TodoPage/TodoList/TodoListComponent.tsx","constants/index.ts","utils/todo/decrementTimeTillEnd.ts","utils/todo/isInProgress.ts","utils/todo/mapTimeToMilliseconds.ts","components/todos/TodoPage/TodoForm/TodoFormComponent.tsx","components/todos/TodoPage/TodoForm/index.ts","components/todos/TodoPage/TodoForm/TodoForm.tsx","components/todos/TodoPage/TodoPage.tsx","App.tsx","reducers/todo/initialState.ts","reducers/index.ts","reducers/todo/todoReducer.ts","sagas/index.ts","store/index.ts","i18n.ts","index.tsx"],"names":["TodoActionKeys","TodoStatus","changeActiveFilter","newActiveFilter","type","CHANGE_ACTIVE_FILTER","payload","updateSearchTerm","newSearchTerm","UPDATE_SEARCH_TERM","timeTillEndTick","TIME_TILL_END_TICK","getActiveFilter","state","todos","activeFilter","getFilters","filters","getActiveTodos","createSelector","filter","todo","status","All","formatTime","time","moment","utcOffset","format","getActiveTodosByTerm","searchTerm","length","text","toLowerCase","match","RadioButton","styled","Radio","Button","_templateObject","RadioGroup","Group","_templateObject2","mapDispatchToProps","TodoFilter","connect","_ref","_useTranslation","useTranslation","t","filtersMarkup","i18n","map","react","key","value","returnObjects","size","onChange","e","target","buttonStyle","Option","Select","searchTermChange","newTerm","SEARCH_TERM_CHANGED","TodoHeader","react_default","a","createElement","Fragment","es_select","defaultValue","style","width","val","i18next","changeLanguage","disabled","input","className","prefix","icon","deleteTodo","id","DELETE_TODO","updateTodo","UPDATE_TODO","sortTodos","column","SORT_TODOS","TodoList","columns","align","title","dataIndex","sorter","b","render","createdAt","date","Date","toLocaleDateString","tags","tag","es_tag","color","estimatedTime","timeTillEnd","record","onClick","Paused","Completed","Active","es_form","layout","FormItem_default","label","es_radio","table","rowClassName","dataSource","pagination","TIME_DECREMENT","decrementTimeTillEndIfInProgress","isInProgress","Object","objectSpread","decrementTimeTillEnd","mapTimeToMilliseconds","seconds","minutes","hours","InputGroup","Input","TodoFormComponent_templateObject","createTodoValidationSchema","Yup","shape","required","min","TodoForm","addTodo","values","ADD_TODO","Math","random","now","formik_esm","initialValues","validationSchema","onSubmit","_ref2","resetForm","_ref3","obj","errors","touched","time_picker","placeholder","props","defaultOpenValue","name","_ref4","field","validateStatus","undefined","help","assign","arrayHelpers","index","concat","_ref5","padding","suffix","remove","es_button","push","htmlType","keys","TodoPage","TodoPage_TodoHeader","TodoPage_TodoList","TodoPage_TodoForm","React","useEffect","saveItemsToLocalStorage","window","localStorage","setItem","JSON","stringify","addEventListener","removeEventListener","Content","minHeight","background","todos_TodoPage_TodoPage","Footer","textAlign","initialState","parse","getItem","rootReducer","combineReducers","arguments","action","toConsumableArray","updatedTodos","sort","todoSearch","watchTodoSearch","watchTimeTillEndTick","rootSaga","regenerator_default","wrap","_context","prev","next","put","stop","_marked","_context2","debounce","_marked2","_context3","delay","_marked3","_context4","all","_marked4","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","use","initReactI18next","init","resources","en","translation","sortBy","addTag","addToDo","selectTime","left","actions","statuses","In Progress","ua","lng","keySeparator","interpolation","escapeValue","ReactDOM","es","src_App","document","getElementById"],"mappings":"uLAKYA,ECLAC,yGDKAD,8SCLAC,+ICML,IA0BMC,EAAqB,SAACC,GAAD,MAAkC,CAClEC,KAAMJ,EAAeK,qBACrBC,QAASH,IAGEI,EAAmB,SAACC,GAAD,MAA4B,CAC1DJ,KAAMJ,EAAeS,mBACrBH,QAASE,IAQEE,EAAkB,iBAAO,CACpCN,KAAMJ,EAAeW,+CCxCVC,EAAkB,SAACC,GAAD,OAC7BA,EAAMC,MAAMC,cAEDC,EAAa,SAACH,GAAD,OACxBA,EAAMC,MAAMG,SAKDC,EAAiBC,YAXN,SAACN,GAAD,OACtBA,EAAMC,MAAMA,OAYZF,EACA,SAACE,EAAgBC,GACf,OAAOD,EACJM,OACC,SAAAC,GAAI,QACFA,EAAKC,SACDD,EAAKC,SAAWP,GACfA,IAAiBd,EAAWsB,SAM9BC,EAAa,SAACC,GACzB,OAAOC,IAAOD,GAAME,UAAU,GAAGC,OAAO,aAG7BC,EAAuBV,YAClCD,EAvB2B,SAACL,GAAD,OAC3BA,EAAMC,MAAMgB,YAwBZ,SAAChB,EAAgBgB,GACf,OAAIA,EAAWC,OACNjB,EAAMM,OACX,SAACC,GAAD,OAAiBA,EAAKW,KAAKC,cAAcC,MAAMJ,EAAWG,iBAGrDnB,2WC/Bb,IAAMqB,EAAcC,YAAOC,IAAMC,OAAbF,CAAHG,KAKXC,EAAaJ,YAAOC,IAAMI,MAAbL,CAAHM,KCXVC,EAAqB,CACzBzC,sBAQW0C,EAAaC,YALF,SAAChC,GAAD,MAAsB,CAC5CE,aAAcH,EAAgBC,GAC9BI,QAASD,EAAWH,KAG6B8B,EAAzBE,CDU0B,SAAAC,GAAmD,IAAhD/B,EAAgD+B,EAAhD/B,aAAcE,EAAkC6B,EAAlC7B,QAASf,EAAyB4C,EAAzB5C,mBAAyB6C,EACjFC,cAAZC,EAD6FF,EAC7FE,EAEFC,GAH+FH,EAC1FI,KAEWlC,EAAQmC,IAC5B,SAAAhC,GAAM,OACJiC,EAAA,cAAClB,EAAD,CACEmB,IAAKlC,EACLmC,MAAOnC,GACN6B,EAAE,OAAO,CAACO,eAAe,IAAzB,SAAmDvD,EAAWmB,QAIrE,OACEiC,EAAA,cAACb,EAAD,CACEiB,KAAK,QACLF,MAAOxC,EACP2C,SAAU,SAACC,GAAD,OAAOzD,EAAmByD,EAAEC,OAAOL,QAC7CM,YAAY,SACXX,cEhCCY,EAAWC,IAAXD,OCLFnB,EAAqB,CACzBzC,qBACAK,mBACAyD,iBL+B8B,SAACC,GAAD,MAAsB,CACpD7D,KAAMJ,EAAekE,oBACrB5D,QAAS2D,KM1CIE,EDiBAtB,YALS,SAAChC,GAAD,MAAsB,CAC5CE,aAAcH,EAAgBC,GAC9BI,QAASD,EAAWH,KAGkB8B,EAAzBE,CDJqC,SAAAC,GAE9C,IADJkB,EACIlB,EADJkB,iBAEA,OACEI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,aAAa,KAAKC,MAAO,CAAEC,MAAO,KAAOjB,SAAU,SAAAkB,GAAG,OAAIC,IAAQC,eAAeF,KACvFR,EAAAC,EAAAC,cAACR,EAAD,CAAQP,MAAM,MAAd,OACAa,EAAAC,EAAAC,cAACR,EAAD,CAAQP,MAAM,MAAd,OACAa,EAAAC,EAAAC,cAACR,EAAD,CAAQP,MAAM,KAAKwB,UAAQ,GAA3B,OACAX,EAAAC,EAAAC,cAACR,EAAD,CAAQP,MAAM,KAAKwB,UAAQ,GAA3B,QAEFX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,UAAU,OACVvB,SAAU,SAACC,GAAD,OAAOK,EAAiBL,EAAEC,OAAOL,QAC3C2B,OAAQd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAM/E,KAAK,WACnBqD,KAAK,QACLrD,KAAK,SACPgE,EAAAC,EAAAC,cAAC1B,EAAD,+DGLAD,EAAqB,CAAEyC,WPhBH,SAACC,GAAD,MAAiB,CACzCjF,KAAMJ,EAAesF,YACrBhF,QAAS+E,IOc8BE,WPrBf,SAAClE,GAAD,MAA4B,CACpDjB,KAAMJ,EAAewF,YACrBlF,QAASe,IOmB0CoE,UPX5B,SAACC,GAAD,MAAyC,CAChEtF,KAAMJ,EAAe2F,WACrBrF,QAASoF,KQhBIE,ED2BA/C,YANS,SAAChC,GAAD,MAAmC,CACzDC,MAAOe,EAAqBhB,KAO5B8B,EAFaE,CEdmC,SAAAC,GAAkD,IAA/ChC,EAA+CgC,EAA/ChC,MAAOsE,EAAwCtC,EAAxCsC,WAAYG,EAA4BzC,EAA5ByC,WAAYE,EAAgB3C,EAAhB2C,UAAgB1C,EAE9EC,cAAZC,EAF0FF,EAE1FE,EACF4C,GAH4F9C,EAEvFI,KACK,CACd,CACE2C,MAAO,SACPC,MAAO9C,EAAE,OAAQ,CAACO,eAAe,IAA1B,KACPwC,UAAW,OACX1C,IAAK,OAEL2C,OAAQ,SAAC5B,EAAU6B,GAAX,OAAwB7B,EAAErC,KAAKD,OAASmE,EAAElE,KAAKD,QACvDoE,OAAQ,SAACnE,GAAD,OACNqB,EAAA,sBAAM4B,UAAU,oBAAoBjD,KAGxC,CACE8D,MAAO,SACPC,MAAO9C,EAAE,OAAQ,CAACO,eAAe,IAA1B,OACPwC,UAAW,SACX1C,IAAK,SACL6C,OAAQ,SAAC7E,GAAD,OACN+B,EAAA,sBAAM4B,UAAU,sBAAsBhC,EAAEhD,EAAWqB,OAGvD,CACEwE,MAAO,SACPC,MAAO9C,EAAE,OAAQ,CAACO,eAAe,IAA1B,UACPwC,UAAW,YACX1C,IAAK,YAEL2C,OAAQ,SAAC5B,EAAU6B,GAAX,OAAyB7B,EAAE+B,UAAYF,EAAEE,UAAY,GAAK,GAClED,OAAQ,SAACE,GAAD,OAAgBhD,EAAA,0BAAO,IAAIiD,KAAKD,GAAME,wBAEhD,CACET,MAAO,SACPC,MAAO9C,EAAE,OAAQ,CAACO,eAAe,IAA1B,KACPwC,UAAW,OACX1C,IAAK,OACL6C,OAAQ,SAACK,GAAD,OACNnD,EAAA,0BACGmD,EAAKzE,OAAS,EAAIyE,EAAKpD,IAAI,SAAAqD,GAAG,OAAIpD,EAAA,cAACqD,EAAA,EAAD,CAAKC,MAAM,OAAOrD,IAAKmD,GAAvB,IAA8BA,KAAc,OAIrF,CACEX,MAAO,SACPC,MAAO9C,EAAE,OAAQ,CAACO,eAAe,IAA1B,cACPwC,UAAW,gBACX1C,IAAK,gBACL6C,OAAQ,SAACS,GAAD,OACNvD,EAAA,0BACG7B,EAAWoF,MAIlB,CACEd,MAAO,SACPC,MAAO9C,EAAE,OAAQ,CAACO,eAAe,IAA1B,KACPwC,UAAW,cACX1C,IAAK,cACL6C,OAAQ,SAACU,EAAqBxF,GAAtB,OACNgC,EAAA,0BACG7B,EAAWqF,MAIlB,CACEf,MAAO,SACPC,MAAO9C,EAAE,OAAQ,CAACO,eAAe,IAA1B,QACPF,IAAK,UACL6C,OAAQ,SAACW,GACP,OAAOzD,EAAA,sBAAM4B,UAAU,qBACrB5B,EAAA,cAAC8B,EAAA,EAAD,CACEF,UAAU,4CACV8B,QAAS,kBAAMxB,EAAW,CAAEF,GAAIyB,EAAOzB,GAAI/D,OAAQwF,EAAOxF,SAAWrB,EAAW,eAAiBA,EAAW+G,OAAS/G,EAAW,kBAChIG,KAAM0G,EAAOxF,SAAWrB,EAAW,eAAiB,QAAU,gBAChEoD,EAAA,cAAC8B,EAAA,EAAD,CACEF,UAAU,4CACV8B,QAAS,kBAAMxB,EAAW,CAAEF,GAAIyB,EAAOzB,GAAI/D,OAAQwF,EAAOxF,SAAWrB,EAAWgH,UAAYhH,EAAWiH,OAASjH,EAAWgH,aAC3H7G,KAAM0G,EAAOxF,SAAWrB,EAAWgH,UAAY,eAAiB,iBAClE5D,EAAA,cAAC8B,EAAA,EAAD,CACEF,UAAU,4CACV8B,QAAS,kBAAM3B,EAAW0B,EAAOzB,KACjCjF,KAAK,gBAMf,OACEiD,EAAA,cAAAA,EAAA,cACAA,EAAA,cAAC8D,EAAA,EAAD,CAAMC,OAAO,UACT/D,EAAA,cAACgE,EAAAhD,EAAD,CAAUiD,MAAOrE,EAAE,WACrBI,EAAA,cAACkE,EAAA,EAAM9E,MAAP,CAAagB,KAAK,UAAUC,SAAU,SAACC,GAAD,OAAO8B,EAAU9B,EAAEC,OAAOL,SAC9DF,EAAA,cAACkE,EAAA,EAAMjF,OAAP,CAAciB,MAAM,aAAaN,EAAE,SACnCI,EAAA,cAACkE,EAAA,EAAMjF,OAAP,CAAciB,MAAM,QAAQN,EAAE,SAC9BI,EAAA,cAACkE,EAAA,EAAMjF,OAAP,CAAciB,MAAM,iBAAiBN,EAAE,qBAI3CI,EAAA,cAACmE,EAAA,EAAD,CAAOC,aAAc,SAACX,GAAD,OAAmBA,EAAOxF,SAAWrB,EAAWgH,UAAY,wBAA0B,IAAIpB,QAASA,EAAS6B,WAAY5G,EAAO6G,YAAY,yCCnHvJC,GAAiB,ICgBjBC,GAAmC,SAACxG,GAAD,OCbpB,SAACA,GAAD,OAAiBA,EAAKC,SAAWrB,EAAW,eDctE6H,CAAazG,GAbqB,SAACA,GACnC,OAAOA,EAAKwF,YAALkB,OAAAC,EAAA,EAAAD,CAAA,GAEE1G,EAFF,CAGDwF,YACExF,EAAKwF,YAAce,GACfvG,EAAKwF,YAAce,GACnB,IAERvG,EAIiB4G,CAAqB5G,GAAQA,GEPrC6G,GARe,SAACzG,GAC7B,OACmB,IAAjBA,EAAK0G,UACY,GAAjB1G,EAAK2G,UAAiB,IACP,GAAf3G,EAAK4G,QAAe,GAAK,sMCM7B,IAAMC,GAAalG,YAAOmG,IAAM9F,MAAbL,CAAHoG,MAUVC,GAA6BC,WAAaC,MAAM,CACpD3G,KAAM0G,WAAaE,WACnBpC,KAAMkC,QAAUA,WAAaG,IAAI,IACjCjC,cAAe8B,WAAaG,IAAI,KCvBnBC,GCOAjG,YACb,iBAAO,IACP,CAAEkG,QhBUmB,SAACC,GAAD,MAA8B,CACnD5I,KAAMJ,EAAeiJ,SACrB3I,QAAQyH,OAAAC,EAAA,EAAAD,CAAA,CACN1C,GAAI6D,KAAKC,SACT/C,UAAW,IAAIE,KAAKA,KAAK8C,OACzB9H,OAAQrB,EAAWiH,OACnBL,YAAamC,EAAOpC,eACjBoC,MgBnBQnG,CFqB0B,SAAAC,GAAiB,IAAdiG,EAAcjG,EAAdiG,QAAchG,EACpCC,cAAZC,EADgDF,EAChDE,EADgDF,EAC7CI,KACX,OACEE,EAAA,cAACgG,GAAA,EAAD,CACEC,cAAe,CAAEtH,KAAM,GAAIwE,KAAM,GAAII,cAAe,GACpD2C,iBAAkBd,GAClBe,SAAU,SAACR,EAADS,GAA2B,IAAhBC,EAAgBD,EAAhBC,UACnBX,EAAQC,GACRU,KAEFvD,OAAQ,SAAAwD,GAAA,IAZGC,EAYAZ,EAAHW,EAAGX,OAAQa,EAAXF,EAAWE,OAAgBC,GAA3BH,EAAmBrI,OAAnBqI,EAA2BG,SAA3B,OACNzG,EAAA,cAACgG,GAAA,EAAD,CAAMpE,UAAU,QACd5B,EAAA,cAAC0G,EAAA,EAAD,CACE9E,UAAU,OACVxB,KAAK,QACLiB,MAAO,CAACC,MAAO,SACfqF,YAAa/G,EAAE,cACfS,SAAU,SAACuG,GACTjB,EAAOpC,cAAgBsB,GAAsB+B,IAE/CC,iBAAkBxI,IAAO,WAAY,cACvC2B,EAAA,cAACgG,GAAA,EAAD,CAAOjJ,KAAK,OAAO+J,KAAK,OAAOhE,OAAQ,SAAAiE,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACrChH,EAAA,cAACgE,EAAAhD,EAAD,CACEiG,eAAgBR,EAAQ9H,MAAQ6H,EAAO7H,KAAO,aAAUuI,EACxDC,KAAMV,EAAQ9H,MAAQ6H,EAAO7H,MAC7BqB,EAAA,cAAC2B,EAAA,EAAD+C,OAAA0C,OAAA,GACMJ,EADN,CAEEnF,OAAQ7B,EAAA,cAAC8B,EAAA,EAAD,CAAM/E,KAAK,SACnBqD,KAAK,QACLrD,KAAK,cAGXiD,EAAA,cAACgG,GAAA,EAAD,CACEc,KAAK,OACLhE,OAAQ,SAAAuE,GAAY,OAClBrH,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACiF,GAAD,KAEIU,EAAOxC,KAAKzE,OAAS,GAClBiH,EAAOxC,KAAKpD,IAAI,SAACqD,EAAKkE,GAAN,OACjBtH,EAAA,cAACgG,GAAA,EAAD,CAAO/F,IAAKqH,EAAOR,KAAI,QAAAS,OAAUD,GAASxE,OAAQ,SAAA0E,GAAA,IAAGR,EAAHQ,EAAGR,MAAH,OAChDhH,EAAA,cAACgE,EAAAhD,EAAD,CACEK,MAAO,CAAEC,MAAO,MAAOmG,QAAS,QAChCR,eAAgBR,EAAQtD,MAAQsD,EAAQtD,KAAKmE,IAAUd,EAAOrD,MAAQqD,EAAOrD,KAAKmE,GAAS,aAAUJ,EACrGC,KAAMV,EAAQtD,MAAQsD,EAAQtD,KAAKmE,IAAUd,EAAOrD,MAAQqD,EAAOrD,KAAKmE,IACxEtH,EAAA,cAAC2B,EAAA,EAAD+C,OAAA0C,OAAA,CAEEM,OAAQ1H,EAAA,cAAC8B,EAAA,EAAD,CAAM/E,KAAK,QAAQ2G,QAAS,kBAAM2D,EAAaM,OAAOL,OAC1DN,EAHN,CAIE5G,KAAK,QACLrD,KAAK,OACL6E,UAAU,uBAMtB5B,EAAA,cAAC4H,EAAA,EAAD,CAAQhG,UAAU,4BAA4B8B,QAAS,kBAAM2D,EAAaQ,KAAK,MAC5EjI,EAAE,eAKXI,EAAA,cAAC4H,EAAA,EAAD,CACEvG,MAAO,CAAEC,MAAO,QAChBwG,SAAS,SACTpG,UApEK6E,EAoEaC,EApEG9B,OAAOqD,KAAKxB,GAAK7H,OAAS,GAqE/C0B,KAAK,SAEFR,EAAE,kBG/EFoI,4LAVX,OACEhI,EAAA,qBAAK4B,UAAU,aACb5B,EAAA,cAACiI,EAAD,MACAjI,EAAA,cAACkI,EAAD,MACAlI,EAAA,cAACmI,GAAD,cANeC,wBCiCR5I,uBAJS,SAAChC,GAAD,MAAsB,CAC5CC,MAAOD,EAAMC,MAAMA,QAGN+B,CA5Bc,SAAAC,GAAe,IAAZhC,EAAYgC,EAAZhC,MAY9B,OAVA4K,oBAAU,WACR,IAAMC,EAA0B,kBAC9BC,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAAUlL,KAItD,OAFA8K,OAAOK,iBAAiB,eAAgBN,GAEjC,WACLC,OAAOM,oBAAoB,eAAgBP,MAI7CvH,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KACEhD,EAAAC,EAAAC,cAAC8C,GAAA,EAAO+E,QAAR,CAAgBzH,MAAO,CAAEoG,QAAS,SAAUsB,UAAW,qBAAsBC,WAAY,SACvFjI,EAAAC,EAAAC,cAACgI,GAAD,OAEFlI,EAAAC,EAAAC,cAAC8C,GAAA,EAAOmF,OAAR,CAAe7H,MAAO,CAAE8H,UAAW,WAAnC,6ECnBSC,GAPkB,CAC/B3L,MAAgBiL,KAAKW,MAAMb,aAAac,QAAQ,UAAY,MAC5D1L,QAAS8G,OAAOiB,OAAO/I,GAAYmB,OAAO,SAAAmC,GAAK,MAAqB,kBAAVA,IAC1DxC,aAAcd,EAAWsB,IACzBO,WAAY,ICLD8K,GAAcC,2BAAgB,CAAC/L,MCG7B,WAGE,IAFfD,EAEeiM,UAAA/K,OAAA,QAAAwI,IAAAuC,UAAA,GAAAA,UAAA,GAFKL,GACpBM,EACeD,UAAA/K,OAAA,EAAA+K,UAAA,QAAAvC,EACf,OAAQwC,EAAO3M,MACb,KAAKJ,EAAeiJ,SAClB,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GACFlH,EADL,CAEEC,MAAK,GAAA8J,OAAA7C,OAAAiF,GAAA,EAAAjF,CAAMlH,EAAMC,OAAZ,CAAAiH,OAAAC,EAAA,EAAAD,CAAA,GAAwBgF,EAAOzM,aAExC,KAAKN,EAAesF,YAClB,OAAOyC,OAAAC,EAAA,EAAAD,CAAA,GACFlH,EADL,CAEEC,MAAOD,EAAMC,MAAMM,OAAO,SAAAC,GAAI,OAAIA,EAAKgE,KAAO0H,EAAOzM,YAGzD,KAAKN,EAAewF,YAClB,IAAMyH,EAAepM,EAAMC,MAAMsC,IAAI,SAAA/B,GAAI,OACvCA,EAAKgE,KAAO0H,EAAOzM,QAAQ+E,GAA3B0C,OAAAC,EAAA,EAAAD,CAAA,GAAqC1G,EAAS0L,EAAOzM,SAAYe,IAEnE,OAAO0G,OAAAC,EAAA,EAAAD,CAAA,GACFlH,EADL,CAEEC,MAAOmM,IAGX,KAAKjN,EAAeK,qBAClB,OAAO0H,OAAAC,EAAA,EAAAD,CAAA,GACFlH,EADL,CAEEE,aAAcgM,EAAOzM,UAGzB,KAAKN,EAAeS,mBAClB,OAAOsH,OAAAC,EAAA,EAAAD,CAAA,GACFlH,EADL,CAEEiB,WAAYiL,EAAOzM,UAGvB,KAAKN,EAAe2F,WAClB,OAAOoC,OAAAC,EAAA,EAAAD,CAAA,GACFlH,EADL,CAEEC,MAAOiH,OAAAiF,GAAA,EAAAjF,CAAIlH,EAAMC,OAAOoM,KAAK,SAAC7I,EAAU6B,GAAX,OAC3B7B,EAAE0I,EAAOzM,SAAW4F,EAAE6G,EAAOzM,SAAW,GAAK,MAInD,KAAKN,EAAeW,mBAGlB,OAAOoH,OAAAC,EAAA,EAAAD,CAAA,GACFlH,EADL,CAEEC,MAAOD,EAAMC,MAAMsC,IAAIyE,MAG3B,QACE,OAAOhH,0DCrDIsM,iBAIAC,iBAIAC,iBAOQC,IAflB,SAAUH,GAAWJ,GAArB,OAAAQ,GAAAlJ,EAAAmJ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACL,OADKF,EAAAE,KAAA,EACCC,aAAIrN,EAAiBwM,EAAOzM,UAD7B,wBAAAmN,EAAAI,SAAAC,IAIA,SAAUV,KAAV,OAAAG,GAAAlJ,EAAAmJ,KAAA,SAAAO,GAAA,cAAAA,EAAAL,KAAAK,EAAAJ,MAAA,OACL,OADKI,EAAAJ,KAAA,EACCK,aAAS,IAAKhO,EAAekE,oBAAqBiJ,IADnD,wBAAAY,EAAAF,SAAAI,IAIA,SAAUZ,KAAV,OAAAE,GAAAlJ,EAAAmJ,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAEH,OAFGO,EAAAP,KAAA,EAEGQ,aAAMvG,IAFT,OAGH,OAHGsG,EAAAP,KAAA,EAGGC,aAAIlN,KAHP,OAAAwN,EAAAP,KAAA,gCAAAO,EAAAL,SAAAO,IAOQ,SAAUd,KAAV,OAAAC,GAAAlJ,EAAAmJ,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OACb,OADaU,EAAAV,KAAA,EACPW,aAAI,CACRlB,KACAC,OAHW,wBAAAgB,EAAAR,SAAAU,ICVf,IAAMC,GAAiBC,eAEVC,GAAQC,uBACnB/B,GACAgC,+BACEC,2BAAgBL,MAGpBA,GAAeM,IAAIxB,IC0CnBnK,IACG4L,IAAIC,KACJC,KAAK,CACJC,UA5Dc,CAChBC,GAAI,CACFC,YAAa,CACXC,OAAQ,UACRhJ,KAAM,OACNrE,KAAM,OACN4E,cAAe,iBACf0I,OAAQ,UACRC,QAAS,WACTC,WAAY,aACZnO,KAAM,CACJW,KAAM,OACNV,OAAQ,SACR8E,UAAW,aACXI,KAAM,OACNI,cAAe,iBACf6I,KAAM,OACNC,QAAS,UACTC,SAAU,CACRpO,IAAO,MACP2F,OAAU,SACVD,UAAa,YACb2I,cAAe,cACf5I,OAAU,eAKlB6I,GAAI,CACFT,YAAa,CACXC,OAAQ,sEACRhJ,KAAM,2BACNrE,KAAM,uCACN4E,cAAe,0GACf0I,OAAQ,0DACRC,QAAS,wFACTC,WAAY,sEACZnO,KAAM,CACJW,KAAM,iCACNV,OAAQ,uCACR8E,UAAW,0DACXI,KAAM,2BACNI,cAAe,qEACf6I,KAAM,+DACNC,QAAS,qBACTC,SAAU,CACRpO,IAAO,qBACP2F,OAAU,6CACVD,UAAa,yDACb2I,cAAe,0DACf5I,OAAU,mDAWhB8I,IAAK,KAELC,cAAc,EAEdC,cAAe,CACbC,aAAa,KAIF9M,EAAf,ECpEF+M,IAAS/J,OACT/B,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAUzB,MAAOA,IACftK,EAAAC,EAAAC,cAAC8L,GAAD,OACWC,SAASC,eAAe","file":"static/js/main.aaa15d68.chunk.js","sourcesContent":["import { UpdateTodoModel } from './../../dto/update-todo.model';\r\nimport ITodo from '../../models/todo/ITodo';\r\nimport { TodoStatus } from '../../models/todo/TodoStatus';\r\nimport ISortableTodoColumns from '../../models/todo/ISortableTodoColumns';\r\n\r\nexport enum TodoActionKeys {\r\n  ADD_TODO = 'ADD_TODO',\r\n  UPDATE_TODO = 'UPDATE_TODO',\r\n  DELETE_TODO = 'DELETE_TODO',\r\n  CHANGE_ACTIVE_FILTER = 'CHANGE_ACTIVE_FILTER',\r\n  UPDATE_SEARCH_TERM = 'UPDATE_SEARCH_TERM',\r\n  SEARCH_TERM_CHANGED = 'SEARCH_TERM_CHANGED',\r\n  SORT_TODOS = 'SORT_TODOS',\r\n  TIME_TILL_END_TICK = 'TIME_TILL_END_TICK',\r\n};\r\n\r\nexport interface AddTodoAction {\r\n  readonly type: TodoActionKeys.ADD_TODO;\r\n  readonly payload: ITodo;\r\n}\r\n\r\nexport interface DeleteTodoAction {\r\n  readonly type: TodoActionKeys.DELETE_TODO;\r\n  readonly payload: number;\r\n}\r\n\r\nexport interface UpdateTodoAction {\r\n  readonly type: TodoActionKeys.UPDATE_TODO;\r\n  readonly payload: UpdateTodoModel;\r\n}\r\n\r\nexport interface ChangeActiveFilterAction {\r\n  readonly type: TodoActionKeys.CHANGE_ACTIVE_FILTER;\r\n  readonly payload: TodoStatus;\r\n}\r\n\r\nexport interface UpdateSearchTermAction {\r\n  readonly type: TodoActionKeys.UPDATE_SEARCH_TERM;\r\n  readonly payload: string;\r\n}\r\n\r\nexport interface SortTodosAction {\r\n  readonly type: TodoActionKeys.SORT_TODOS;\r\n  readonly payload: keyof ISortableTodoColumns;\r\n}\r\n\r\nexport interface TimeTillEndTickAction {\r\n  readonly type: TodoActionKeys.TIME_TILL_END_TICK;\r\n}\r\n\r\nexport type TodoActionTypes = AddTodoAction\r\n  | DeleteTodoAction\r\n  | UpdateTodoAction\r\n  | ChangeActiveFilterAction\r\n  | UpdateSearchTermAction\r\n  | SortTodosAction\r\n  | TimeTillEndTickAction;","export enum TodoStatus {\r\n  All,\r\n  Active,\r\n  Completed,\r\n  \"In Progress\",\r\n  Paused\r\n};\r\n","import { CreateTodoModel } from './../../dto/create-todo.model';\r\nimport { TodoActionKeys } from './types';\r\nimport { UpdateTodoModel } from '../../dto/update-todo.model';\r\nimport { TodoStatus } from '../../models/todo/TodoStatus';\r\nimport ISortableTodoColumns from '../../models/todo/ISortableTodoColumns';\r\n\r\nexport const updateTodo = (todo: UpdateTodoModel) => ({\r\n  type: TodoActionKeys.UPDATE_TODO,\r\n  payload: todo\r\n});\r\n\r\nexport const deleteTodo = (id: number) => ({\r\n  type: TodoActionKeys.DELETE_TODO,\r\n  payload: id\r\n});\r\n\r\nexport const sortTodos = (column: keyof ISortableTodoColumns) => ({\r\n  type: TodoActionKeys.SORT_TODOS,\r\n  payload: column\r\n});\r\n\r\nexport const addTodo = (values: CreateTodoModel) => ({\r\n  type: TodoActionKeys.ADD_TODO,\r\n  payload: {\r\n    id: Math.random(),\r\n    createdAt: new Date(Date.now()),\r\n    status: TodoStatus.Active,\r\n    timeTillEnd: values.estimatedTime,\r\n    ...values,\r\n  }\r\n});\r\n\r\nexport const changeActiveFilter = (newActiveFilter: TodoStatus) => ({\r\n  type: TodoActionKeys.CHANGE_ACTIVE_FILTER,\r\n  payload: newActiveFilter\r\n});\r\n\r\nexport const updateSearchTerm = (newSearchTerm: string) => ({\r\n  type: TodoActionKeys.UPDATE_SEARCH_TERM,\r\n  payload: newSearchTerm\r\n});\r\n\r\nexport const searchTermChange = (newTerm: string) => ({\r\n  type: TodoActionKeys.SEARCH_TERM_CHANGED,\r\n  payload: newTerm\r\n});\r\n\r\nexport const timeTillEndTick = () => ({\r\n  type: TodoActionKeys.TIME_TILL_END_TICK\r\n})","import { AppState } from './../store/index';\r\nimport { createSelector } from 'reselect';\r\nimport moment from 'moment';\r\nimport { TodoStatus } from '../models/todo/TodoStatus';\r\nimport ITodo from '../models/todo/ITodo';\r\n\r\nexport const getTodos = (state: AppState) =>\r\n  state.todos.todos;\r\nexport const getActiveFilter = (state: AppState) =>\r\n  state.todos.activeFilter;\r\n\r\nexport const getFilters = (state: AppState) =>\r\n  state.todos.filters;\r\n\r\nexport const getSearchTerm = (state: AppState) =>\r\n  state.todos.searchTerm;\r\n\r\nexport const getActiveTodos = createSelector(\r\n  getTodos,\r\n  getActiveFilter,\r\n  (todos: ITodo[], activeFilter: TodoStatus) => {\r\n    return todos\r\n      .filter(\r\n        todo =>\r\n          todo.status\r\n            ? todo.status === activeFilter\r\n            || activeFilter === TodoStatus.All\r\n            : false\r\n      );\r\n  }\r\n);\r\n\r\nexport const formatTime = (time: number) => {\r\n  return moment(time).utcOffset(0).format('HH:mm:ss');\r\n}\r\n\r\nexport const getActiveTodosByTerm = createSelector(\r\n  getActiveTodos,\r\n  getSearchTerm,\r\n  (todos: ITodo[], searchTerm: string) => {\r\n    if (searchTerm.length)\r\n      return todos.filter(\r\n        (todo: ITodo) => todo.text.toLowerCase().match(searchTerm.toLowerCase())\r\n      )\r\n    else\r\n      return todos;\r\n  }\r\n);","import * as React from 'react';\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { Radio } from 'antd';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { TodoStatus } from '../../../../../models/todo/TodoStatus';\r\n\r\ninterface Props {\r\n  activeFilter: TodoStatus;\r\n  filters: TodoStatus[];\r\n  changeActiveFilter(filter: TodoStatus): void;\r\n}\r\n\r\nconst RadioButton = styled(Radio.Button)`\r\n  flex: 1;\r\n  text-align: center;\r\n`;\r\n\r\nconst RadioGroup = styled(Radio.Group)`\r\n  display: flex !important;\r\n  width: 100%;\r\n  @media screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const TodoFilterComponent: React.FC<Props> = ({ activeFilter, filters, changeActiveFilter }) => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const filtersMarkup = filters.map(\r\n    filter => (\r\n      <RadioButton\r\n        key={filter}\r\n        value={filter}>\r\n        {t('todo',{returnObjects: true})['statuses' as any][TodoStatus[filter] as any]}\r\n      </RadioButton>\r\n    )\r\n  );\r\n  return (\r\n    <RadioGroup\r\n      size='large'\r\n      value={activeFilter}\r\n      onChange={(e) => changeActiveFilter(e.target.value)}\r\n      buttonStyle=\"solid\">\r\n      {filtersMarkup}\r\n    </RadioGroup>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { AppState } from './../../../../../store';\r\nimport { changeActiveFilter } from './../../../../../actions/todo/actions';\r\n\r\nimport { getActiveFilter, getFilters } from './../../../../../selectors/todo-selectors';\r\nimport { TodoFilterComponent } from './TodoFilterComponent';\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  changeActiveFilter\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  activeFilter: getActiveFilter(state),\r\n  filters: getFilters(state),\r\n});\r\n\r\nexport const TodoFilter = connect(mapStateToProps, mapDispatchToProps)(TodoFilterComponent);","import React from 'react';\r\nimport { Input, Icon, Select } from 'antd';\r\n\r\nimport { TodoFilter } from './TodoFilter/TodoFilter';\r\nimport i18next from 'i18next';\r\nimport { TodoStatus } from '../../../../models/todo/TodoStatus';\r\n\r\ninterface Props {\r\n  activeFilter: TodoStatus;\r\n  filters: TodoStatus[];\r\n  changeActiveFilter(filter: TodoStatus): void;\r\n  searchTermChange(newTerm: string): void;\r\n}\r\nconst { Option } = Select;\r\n\r\nexport const TodoHeaderComponent: React.FC<Props> = ({\r\n  searchTermChange\r\n}) => {\r\n  return (\r\n    <>\r\n      <Select defaultValue=\"ua\" style={{ width: 120 }} onChange={val => i18next.changeLanguage(val)}>\r\n        <Option value=\"ua\">Ukr</Option>\r\n        <Option value=\"en\">Eng</Option>\r\n        <Option value=\"de\" disabled>Deu</Option>\r\n        <Option value=\"ru\" disabled>Rus</Option>\r\n      </Select>\r\n      <Input\r\n        className='my-3'\r\n        onChange={(e) => searchTermChange(e.target.value)}\r\n        prefix={<Icon type=\"search\" />}\r\n        size='large'\r\n        type=\"text\" />\r\n      <TodoFilter />\r\n    </>\r\n  );\r\n}","import { connect } from 'react-redux';\r\n\r\nimport { AppState } from '../.././../../store';\r\nimport { changeActiveFilter, updateSearchTerm, searchTermChange } from './../../../../actions/todo/actions';\r\nimport { getActiveFilter, getFilters } from './../../../../selectors/todo-selectors';\r\n\r\nimport { TodoHeaderComponent } from './TodoHeaderComponent';\r\n\r\nconst mapDispatchToProps = {\r\n  changeActiveFilter,\r\n  updateSearchTerm,\r\n  searchTermChange\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  activeFilter: getActiveFilter(state),\r\n  filters: getFilters(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHeaderComponent);","import TodoHeader from \"./TodoHeader\";\r\n\r\nexport default TodoHeader;","import { connect } from 'react-redux';\r\n\r\nimport { AppState } from './../../../../store';\r\n\r\nimport { deleteTodo, updateTodo, sortTodos } from '../../../../actions/todo/actions';\r\n\r\nimport { getActiveTodosByTerm } from '../../../../selectors/todo-selectors';\r\n\r\n\r\nimport { TodoListComponent } from './TodoListComponent';\r\nimport { UpdateTodoModel } from '../../../../dto/update-todo.model';\r\nimport ITodo from '../../../../models/todo/ITodo';\r\nimport ISortableTodoColumns from '../../../../models/todo/ISortableTodoColumns';\r\n\r\nexport interface IStateProps { \r\n  todos: ITodo[];\r\n};\r\nexport interface IDispatchProps {\r\n  deleteTodo(id: number): void;\r\n  updateTodo(updateTodoModel: UpdateTodoModel): void;\r\n  sortTodos(column: keyof ISortableTodoColumns): void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IStateProps => ({\r\n  todos: getActiveTodosByTerm(state)\r\n});\r\n\r\nconst mapDispatchToProps = { deleteTodo, updateTodo, sortTodos }\r\n\r\nexport default connect<IStateProps, IDispatchProps, null, AppState>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoListComponent);","import TodoList from \"./TodoList\";\r\n\r\nexport default TodoList;","import * as React from 'react';\r\n\r\nimport { Table, Icon, Tag, Form, Radio } from 'antd';\r\n\r\nimport { IStateProps, IDispatchProps } from './TodoList';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport './TodoItem/TodoItem.scss';\r\nimport { formatTime } from '../../../../selectors/todo-selectors';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport { TodoStatus } from '../../../../models/todo/TodoStatus';\r\nimport ITodo from '../../../../models/todo/ITodo';\r\ntype Props = IStateProps & IDispatchProps;\r\n\r\nexport const TodoListComponent: React.FC<Props> = ({ todos, deleteTodo, updateTodo, sortTodos }) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const columns = [\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['text' as any],\r\n      dataIndex: 'text',\r\n      key: 'text',\r\n      // defaultSortOrder: 'descend',\r\n      sorter: (a: ITodo, b: ITodo) => a.text.length - b.text.length,\r\n      render: (text: string) => (\r\n        <span className='todo__item__text'>{text}</span>\r\n      )\r\n    },\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['status' as any],\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (status: number) => (\r\n        <span className='todo__item__status'>{t(TodoStatus[status])}</span>\r\n      )\r\n    },\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['createdAt' as any],\r\n      dataIndex: 'createdAt',\r\n      key: 'createdAt',\r\n      // defaultSortOrder: 'descend',\r\n      sorter: (a: ITodo, b: ITodo) =>  a.createdAt > b.createdAt ? 1 : -1,\r\n      render: (date: Date) => <span>{new Date(date).toLocaleDateString()}</span>\r\n    },\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['tags' as any],\r\n      dataIndex: \"tags\",\r\n      key: 'tags',\r\n      render: (tags: string[]) => (\r\n        <span>\r\n          {tags.length > 0 ? tags.map(tag => <Tag color=\"blue\" key={tag}>#{tag}</Tag>) : '-'}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['estimatedTime' as any],\r\n      dataIndex: \"estimatedTime\",\r\n      key: 'estimatedTime',\r\n      render: (estimatedTime: number) => (\r\n        <span>\r\n          {formatTime(estimatedTime)}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['left' as any],\r\n      dataIndex: \"timeTillEnd\",\r\n      key: 'timeTillEnd',\r\n      render: (timeTillEnd: number, todo: ITodo) => (\r\n        <span>\r\n          {formatTime(timeTillEnd)}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      align: 'center' as 'center',\r\n      title: t('todo', {returnObjects: true})['actions' as any],\r\n      key: 'actions',\r\n      render: (record: ITodo) => {\r\n        return <span className='todo__item__icons'>\r\n          <Icon\r\n            className=\"todo__item__icon todo__item__icon--toggle\"\r\n            onClick={() => updateTodo({ id: record.id, status: record.status === TodoStatus[\"In Progress\"] ? TodoStatus.Paused : TodoStatus[\"In Progress\"] })}\r\n            type={record.status === TodoStatus[\"In Progress\"] ? \"pause\" : 'caret-right'} />\r\n          <Icon\r\n            className=\"todo__item__icon todo__item__icon--toggle\"\r\n            onClick={() => updateTodo({ id: record.id, status: record.status === TodoStatus.Completed ? TodoStatus.Active : TodoStatus.Completed })}\r\n            type={record.status === TodoStatus.Completed ? \"close-circle\" : 'check-circle'} />\r\n          <Icon\r\n            className=\"todo__item__icon todo__item__icon--delete\"\r\n            onClick={() => deleteTodo(record.id)}\r\n            type=\"delete\" />\r\n        </span>\r\n      }\r\n    }\r\n  ];\r\n  \r\n  return (\r\n    <>\r\n    <Form layout=\"inline\">\r\n        <FormItem label={t('sortBy')}>\r\n      <Radio.Group size=\"default\" onChange={(e) => sortTodos(e.target.value)}>\r\n        <Radio.Button value=\"createdAt\">{t('date')}</Radio.Button>\r\n        <Radio.Button value=\"text\">{t('text')}</Radio.Button>\r\n        <Radio.Button value=\"estimatedTime\">{t('estimatedTime')}</Radio.Button>\r\n      </Radio.Group>\r\n    </FormItem>\r\n  </Form>\r\n    <Table rowClassName={(record: ITodo) => record.status === TodoStatus.Completed ? 'todo__item--completed' : ''} columns={columns} dataSource={todos} pagination={false} />\r\n    </>\r\n  )\r\n};","export const TIME_DECREMENT = 1000;","import { isInProgress } from \"./isInProgress\";\r\nimport ITodo from \"../../models/todo/ITodo\";\r\nimport { TIME_DECREMENT } from \"../../constants\";\r\n\r\nexport const decrementTimeTillEnd = (todo: ITodo) => {\r\n  return todo.timeTillEnd\r\n    ? {\r\n        ...todo,\r\n        timeTillEnd:\r\n          todo.timeTillEnd > TIME_DECREMENT\r\n            ? todo.timeTillEnd - TIME_DECREMENT\r\n            : 0\r\n      }\r\n    : todo;\r\n};\r\n\r\nexport const decrementTimeTillEndIfInProgress = (todo: ITodo) =>\r\n  isInProgress(todo) ? decrementTimeTillEnd(todo) : todo;\r\n","import ITodo from \"../../models/todo/ITodo\";\r\nimport { TodoStatus } from \"../../models/todo/TodoStatus\";\r\n\r\nexport const isInProgress = (todo: ITodo) => todo.status === TodoStatus[\"In Progress\"];\r\n","import { Moment } from \"moment\";\r\n\r\nconst mapTimeToMilliseconds = (time: Moment) => {\r\n  return (\r\n    time.seconds() * 1000 +\r\n    time.minutes() * 60 * 1000 +\r\n    time.hours() * 60 * 60 * 1000\r\n  );\r\n};\r\n\r\nexport default mapTimeToMilliseconds;","import * as React from 'react';\r\nimport { Input, Button, Icon, Tag, InputNumber, TimePicker } from 'antd';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Formik, Form, Field, FieldProps, FieldArray } from 'formik';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport { CreateTodoModel } from '../../../../dto/create-todo.model';\r\nimport styled from \"styled-components\";\r\nimport moment from 'moment';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { mapTimeToMilliseconds } from '../../../../utils/todo';\r\n\r\nconst InputGroup = styled(Input.Group)`\r\n  display: flex !important;\r\n  margin: 0 -10px !important;\r\n  flex-wrap: wrap;\r\n  width: calc(100% + 20px) !important;\r\n`;\r\ninterface Props {\r\n  addTodo(values: CreateTodoModel): void;\r\n}\r\n\r\nconst createTodoValidationSchema = Yup.object().shape({\r\n  text: Yup.string().required(),\r\n  tags: Yup.array(Yup.string().min(3)),\r\n  estimatedTime: Yup.number().min(0)\r\n});\r\n\r\nconst hasKeys = (obj: object) => Object.keys(obj).length > 0;\r\n\r\nexport const TodoForm: React.FC<Props> = ({ addTodo }) => {\r\n  const { t, i18n } = useTranslation();\r\n  return (\r\n    <Formik\r\n      initialValues={{ text: '', tags: [], estimatedTime: 0 }}\r\n      validationSchema={createTodoValidationSchema}\r\n      onSubmit={(values, { resetForm }) => {\r\n        addTodo(values);\r\n        resetForm();\r\n      }}\r\n      render={({ values, errors, status, touched }) => (\r\n        <Form className='my-3'>\r\n          <TimePicker\r\n            className='my-2'\r\n            size='large'\r\n            style={{width: '150px'}}\r\n            placeholder={t('selectTime')}\r\n            onChange={(props) => {\r\n              values.estimatedTime = mapTimeToMilliseconds(props);\r\n            }}\r\n            defaultOpenValue={moment('00:00:00', 'HH:mm:ss')}/>\r\n          <Field type=\"text\" name=\"text\" render={({ field }: FieldProps) => (\r\n            <FormItem\r\n              validateStatus={touched.text && errors.text ? 'error' : undefined}\r\n              help={touched.text && errors.text}>\r\n              <Input\r\n                {...field}\r\n                prefix={<Icon type=\"plus\" />}\r\n                size='large'\r\n                type=\"text\" />\r\n            </FormItem>\r\n          )} />\r\n          <FieldArray\r\n            name='tags'\r\n            render={arrayHelpers => (\r\n              <>\r\n                <InputGroup>\r\n                  {\r\n                    values.tags.length > 0\r\n                    && values.tags.map((tag, index) => (\r\n                      <Field key={index} name={`tags.${index}`} render={({ field }: FieldProps) => (\r\n                        <FormItem\r\n                          style={{ width: '20%', padding: '10px' }}\r\n                          validateStatus={touched.tags && touched.tags[index] && errors.tags && errors.tags[index] ? 'error' : undefined}\r\n                          help={touched.tags && touched.tags[index] && errors.tags && errors.tags[index]}>\r\n                          <Input\r\n\r\n                            suffix={<Icon type=\"minus\" onClick={() => arrayHelpers.remove(index)} />}\r\n                            {...field}\r\n                            size='large'\r\n                            type=\"text\"\r\n                            className=\"todo-input\" />\r\n                        </FormItem>\r\n                      )} />\r\n                    ))\r\n                  }\r\n                </InputGroup>\r\n                <Button className='todo__item__button--small' onClick={() => arrayHelpers.push('')}>\r\n                  {t('addTag')}\r\n                </Button>\r\n              </>\r\n            )}\r\n          />\r\n          <Button\r\n            style={{ width: '100%' }}\r\n            htmlType='submit'\r\n            disabled={hasKeys(errors)}\r\n            size='large'\r\n            >\r\n              {t('addToDo')}\r\n            </Button>\r\n        </Form>\r\n      )}\r\n    >\r\n    </Formik>\r\n  )\r\n};","import TodoForm from './TodoForm';\r\n\r\nexport default TodoForm;","import { connect } from 'react-redux';\r\nimport { TodoForm } from './TodoFormComponent';\r\nimport { addTodo } from '../../../../actions/todo/actions';\r\nimport { CreateTodoModel } from '../../../../dto/create-todo.model';\r\n\r\ninterface DispatchFromProps {\r\n  addTodo(values: CreateTodoModel): void;\r\n}\r\n\r\nexport default connect<{}, DispatchFromProps>(\r\n  () => ({}),\r\n  { addTodo }\r\n)(TodoForm);\r\n\r\n\r\n","import * as React from 'react';\r\n\r\nimport TodoHeader from './TodoHeader';\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\n\r\nimport './TodoPage.scss';\r\n\r\nclass TodoPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"todo-page\">\r\n        <TodoHeader />\r\n        <TodoList />\r\n        <TodoForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoPage;","import React, { useEffect } from 'react';\r\nimport TodoPage from './components/todos/TodoPage/TodoPage';\r\nimport { Layout } from 'antd';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from './store';\r\nimport ITodo from './models/todo/ITodo';\r\n\r\ninterface Props {\r\n  todos: ITodo[]\r\n};\r\n\r\nconst App: React.FC<Props> = ({ todos }) => {\r\n\r\n  useEffect(() => {\r\n    const saveItemsToLocalStorage = () =>\r\n      window.localStorage.setItem('todos', JSON.stringify(todos))\r\n\r\n    window.addEventListener('beforeunload', saveItemsToLocalStorage);\r\n\r\n    return function () {\r\n      window.removeEventListener('beforeunload', saveItemsToLocalStorage);\r\n    }\r\n  })\r\n  return (\r\n    <Layout>\r\n      <Layout.Content style={{ padding: '50px 0', minHeight: 'calc(100vh - 69px)', background: '#fff' }}>\r\n        <TodoPage />\r\n      </Layout.Content>\r\n      <Layout.Footer style={{ textAlign: 'center' }}>\r\n        ToDo App ©2019 Created by Max Chykalo\r\n      </Layout.Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  todos: state.todos.todos\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { ITodoState } from \"./ITodoState\";\r\nimport ITodo from \"../../models/todo/ITodo\";\r\nimport { TodoStatus } from \"../../models/todo/TodoStatus\";\r\n\r\nconst initialState: ITodoState = {\r\n  todos: <ITodo[]>JSON.parse(localStorage.getItem(\"todos\") || \"[]\"),\r\n  filters: Object.values(TodoStatus).filter(value => typeof value === \"number\"),\r\n  activeFilter: TodoStatus.All,\r\n  searchTerm: \"\"\r\n};\r\n\r\nexport default initialState;","import todoReducer from \"./todo/todoReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers({todos : todoReducer});\r\n\r\n","import { ITodoState } from \"./ITodoState\";\r\nimport initialState from \"./initialState\";\r\nimport ITodo from \"../../models/todo/ITodo\";\r\nimport { TodoActionTypes, TodoActionKeys } from \"../../actions/todo/types\";\r\nimport { decrementTimeTillEndIfInProgress } from \"../../utils/todo/decrementTimeTillEnd\";\r\n\r\nexport default (\r\n  state: ITodoState = initialState,\r\n  action: TodoActionTypes\r\n): ITodoState => {\r\n  switch (action.type) {\r\n    case TodoActionKeys.ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, { ...action.payload }]\r\n      };\r\n    case TodoActionKeys.DELETE_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo.id !== action.payload)\r\n      };\r\n    }\r\n    case TodoActionKeys.UPDATE_TODO: {\r\n      const updatedTodos = state.todos.map(todo =>\r\n        todo.id === action.payload.id ? { ...todo, ...action.payload } : todo\r\n      );\r\n      return {\r\n        ...state,\r\n        todos: updatedTodos,\r\n      };\r\n    }\r\n    case TodoActionKeys.CHANGE_ACTIVE_FILTER: {\r\n      return {\r\n        ...state,\r\n        activeFilter: action.payload\r\n      };\r\n    }\r\n    case TodoActionKeys.UPDATE_SEARCH_TERM: {\r\n      return {\r\n        ...state,\r\n        searchTerm: action.payload\r\n      };\r\n    }\r\n    case TodoActionKeys.SORT_TODOS: {\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos].sort((a: ITodo, b: ITodo) =>\r\n          a[action.payload] > b[action.payload] ? 1 : -1\r\n        )\r\n      };\r\n    }\r\n    case TodoActionKeys.TIME_TILL_END_TICK: {\r\n      // console.log(state.todos.map(decrementTimeTillEndIfInProgress).map(todo => todo.timeTillEnd));\r\n      // console.log(state.todos.map(decrementTimeTillEndIfInProgress).map(todo => todo.estimatedTime));\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(decrementTimeTillEndIfInProgress)\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { timeTillEndTick } from './../actions/todo/actions';\r\nimport { put, all, debounce, delay } from 'redux-saga/effects';\r\n\r\nimport { TodoActionKeys, UpdateSearchTermAction, UpdateTodoAction, TimeTillEndTickAction } from './../actions/todo/types';\r\nimport { updateSearchTerm, updateTodo } from '../actions/todo/actions';\r\nimport { TIME_DECREMENT } from '../constants';\r\n\r\nexport function* todoSearch(action: UpdateSearchTermAction) {\r\n  yield put(updateSearchTerm(action.payload));\r\n}\r\n\r\nexport function* watchTodoSearch(): IterableIterator<any> {\r\n  yield debounce(500, TodoActionKeys.SEARCH_TERM_CHANGED, todoSearch);\r\n}\r\n\r\nexport function* watchTimeTillEndTick(): IterableIterator<any> {\r\n  while(true) {\r\n    yield delay(TIME_DECREMENT);\r\n    yield put(timeTillEndTick());\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchTodoSearch(),\r\n    watchTimeTillEndTick(),\r\n  ])\r\n}","\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { rootReducer } from '../reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootSaga from '../sagas';\r\nimport { ITodoState } from '../reducers/todo/ITodoState';\r\n\r\nexport interface AppState {\r\n  todos: ITodoState\r\n};\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  )\r\n)\r\nsagaMiddleware.run(rootSaga)\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\n// the translations\r\n// (tip move them in a JSON file and import them)\r\nconst resources = {\r\n  en: {\r\n    translation: {\r\n      sortBy: 'Sort By',\r\n      date: 'Date',\r\n      text: 'Text',\r\n      estimatedTime: 'Estimated Time',\r\n      addTag: 'Add Tag',\r\n      addToDo: 'Add ToDo',\r\n      selectTime: 'Chose Time',\r\n      todo: {\r\n        text: \"Text\",\r\n        status: \"Status\",\r\n        createdAt: \"Created At\",\r\n        tags: \"Tags\",\r\n        estimatedTime: \"Estimated Time\",\r\n        left: \"Left\",\r\n        actions: \"Actions\",\r\n        statuses: {\r\n          \"All\": \"All\",\r\n          \"Active\": \"Active\",\r\n          \"Completed\": \"Completed\",\r\n          \"In Progress\": \"In Progress\",\r\n          \"Paused\": \"In Pause\",    \r\n        } \r\n      },\r\n    }\r\n  },\r\n  ua: {\r\n    translation: {\r\n      sortBy: 'Сортувати по',\r\n      date: 'Даті',\r\n      text: 'Тексту',\r\n      estimatedTime: 'Запланованому часу',\r\n      addTag: 'Додати тег',\r\n      addToDo: 'Додати завдання',\r\n      selectTime: 'Виберіть час',\r\n      todo: {\r\n        text: \"Текст\",\r\n        status: \"Статус\",\r\n        createdAt: \"Створено в\",\r\n        tags: \"Теги\",\r\n        estimatedTime: \"Заплановано\",\r\n        left: \"Залишилось\",\r\n        actions: \"Дії\",\r\n        statuses: {\r\n          \"All\": \"Всі\",\r\n          \"Active\": \"Активні\",\r\n          \"Completed\": \"Завершені\",\r\n          \"In Progress\": \"В прогресі\",\r\n          \"Paused\": \"На паузі\",    \r\n        } \r\n      },\r\n    }\r\n  }\r\n};\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: \"ua\",\r\n\r\n    keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  });\r\n\r\n  export default i18n;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n  <App />\r\n</Provider>, document.getElementById('root'));"],"sourceRoot":""}